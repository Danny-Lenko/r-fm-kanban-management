{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/modules/Layout/AppBar/ButtonsBox/index.tsx\",\n  _s = $RefreshSig$();\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DotsMenu from '../../../../library/common/components/DotsMenu/DotsMenu';\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport { useAppSelector, useAppDispatch } from '../../../../library/common/hooks';\nimport { setTaskEditing } from '../../../../main/slices/modalSlice';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport useTheme from '@mui/material/styles/useTheme';\nimport { buttonsBoxStyles, sxPlusBtnStyles } from './buttonsBoxStyles';\nimport { AppBtn } from '../../../../library/common/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonsBox = () => {\n  _s();\n  const activeBoard = useAppSelector(state => state.data.activeBoard);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const xsScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const editTask = () => {\n    dispatch(setTaskEditing(true));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: buttonsBoxStyles,\n    children: [xsScreen ? /*#__PURE__*/_jsxDEV(IconButton, {\n      disabled: !activeBoard.columns[0],\n      sx: sxPlusBtnStyles,\n      onClick: editTask,\n      children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(AppBtn, {\n      disabled: !activeBoard.columns[0],\n      buttonSize: \"small\",\n      color: \"primary\",\n      onClick: editTask,\n      children: \"+ Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DotsMenu, {\n      isTaskMenu: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n_s(ButtonsBox, \"RYl5LHMFO/NXWpw70Eg3YonCQ5Y=\", false, function () {\n  return [useAppSelector, useAppDispatch, useTheme, useMediaQuery];\n});\n_c = ButtonsBox;\nexport default ButtonsBox;\nvar _c;\n$RefreshReg$(_c, \"ButtonsBox\");","map":{"version":3,"names":["Box","IconButton","DotsMenu","AddRoundedIcon","useAppSelector","useAppDispatch","setTaskEditing","useMediaQuery","useTheme","buttonsBoxStyles","sxPlusBtnStyles","AppBtn","ButtonsBox","activeBoard","state","data","dispatch","theme","xsScreen","breakpoints","down","editTask","columns"],"sources":["/home/danny/projects/r-fm-kanban-management/src/modules/Layout/AppBar/ButtonsBox/index.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DotsMenu from '../../../../library/common/components/DotsMenu/DotsMenu';\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport {\n   useAppSelector,\n   useAppDispatch,\n} from '../../../../library/common/hooks';\nimport { setTaskEditing } from '../../../../main/slices/modalSlice';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport useTheme from '@mui/material/styles/useTheme';\nimport { buttonsBoxStyles, sxPlusBtnStyles } from './buttonsBoxStyles';\n\nimport { AppBtn } from '../../../../library/common/components';\n\nconst ButtonsBox = () => {\n   const activeBoard = useAppSelector((state) => state.data.activeBoard);\n   const dispatch = useAppDispatch();\n   const theme = useTheme();\n   const xsScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n   const editTask = () => {\n      dispatch(setTaskEditing(true));\n   };\n\n   return (\n      <Box sx={buttonsBoxStyles}>\n         {xsScreen ? (\n            <IconButton\n               disabled={!activeBoard.columns[0]}\n               sx={sxPlusBtnStyles}\n               onClick={editTask}\n            >\n               <AddRoundedIcon />\n            </IconButton>\n         ) : (\n            <AppBtn\n               disabled={!activeBoard.columns[0]}\n               buttonSize='small'\n               color='primary'\n               onClick={editTask}\n            >\n               + Add New Task\n            </AppBtn>\n         )}\n\n         <DotsMenu isTaskMenu={false} />\n      </Box>\n   );\n};\n\nexport default ButtonsBox;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,yDAAyD;AAC9E,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SACGC,cAAc,EACdC,cAAc,QACV,kCAAkC;AACzC,SAASC,cAAc,QAAQ,oCAAoC;AACnE,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,oBAAoB;AAEtE,SAASC,MAAM,QAAQ,uCAAuC;AAAC;AAE/D,MAAMC,UAAU,GAAG,MAAM;EAAA;EACtB,MAAMC,WAAW,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC;EACrE,MAAMG,QAAQ,GAAGX,cAAc,EAAE;EACjC,MAAMY,KAAK,GAAGT,QAAQ,EAAE;EACxB,MAAMU,QAAQ,GAAGX,aAAa,CAACU,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE5D,MAAMC,QAAQ,GAAG,MAAM;IACpBL,QAAQ,CAACV,cAAc,CAAC,IAAI,CAAC,CAAC;EACjC,CAAC;EAED,oBACG,QAAC,GAAG;IAAC,EAAE,EAAEG,gBAAiB;IAAA,WACtBS,QAAQ,gBACN,QAAC,UAAU;MACR,QAAQ,EAAE,CAACL,WAAW,CAACS,OAAO,CAAC,CAAC,CAAE;MAClC,EAAE,EAAEZ,eAAgB;MACpB,OAAO,EAAEW,QAAS;MAAA,uBAElB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR,gBAEb,QAAC,MAAM;MACJ,QAAQ,EAAE,CAACR,WAAW,CAACS,OAAO,CAAC,CAAC,CAAE;MAClC,UAAU,EAAC,OAAO;MAClB,KAAK,EAAC,SAAS;MACf,OAAO,EAAED,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAIvB,eAED,QAAC,QAAQ;MAAC,UAAU,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEZ,CAAC;AAAC,GAlCIT,UAAU;EAAA,QACOR,cAAc,EACjBC,cAAc,EACjBG,QAAQ,EACLD,aAAa;AAAA;AAAA,KAJ3BK,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}