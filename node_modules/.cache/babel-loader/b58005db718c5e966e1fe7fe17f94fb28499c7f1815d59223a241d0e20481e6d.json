{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx\",\n  _s = $RefreshSig$();\nimport { Typography } from '@mui/material';\nimport { Form } from 'formik';\nimport { btnSx } from './editorStyles';\nimport { EditorTitleField, EditorDescriptionField, EditorSelectField, EditorSubtasksFieldArr, EditorFormik } from '.';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditAddTaskModal = () => {\n  _s();\n  const cols = useAppSelector(state => state.data.activeBoard.columns);\n  const isExisting = useAppSelector(state => state.modals.isExistingTask);\n  return (\n    /*#__PURE__*/\n    // <Overlay>\n    // <Paper elevation={0} sx={editorStyles(theme)}>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: isExisting ? 'Edit task' : 'Add new task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(EditorFormik, {\n        children: props => {\n          const editorTitleProps = {\n            value: props.values.title,\n            onChange: props.handleChange,\n            error: props.touched.title && !!props.errors.title,\n            helperText: props.touched.title && props.errors.title\n          };\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(EditorTitleField, {\n              values: undefined,\n              errors: undefined,\n              touched: undefined,\n              isSubmitting: false,\n              isValidating: false,\n              submitCount: 0,\n              setStatus: function (status) {\n                throw new Error('Function not implemented.');\n              },\n              setErrors: function (errors) {\n                throw new Error('Function not implemented.');\n              },\n              setSubmitting: function (isSubmitting) {\n                throw new Error('Function not implemented.');\n              },\n              setTouched: function (touched, shouldValidate) {\n                throw new Error('Function not implemented.');\n              },\n              setValues: function (values, shouldValidate) {\n                throw new Error('Function not implemented.');\n              },\n              setFieldValue: function (field, value, shouldValidate) {\n                throw new Error('Function not implemented.');\n              },\n              setFieldError: function (field, message) {\n                throw new Error('Function not implemented.');\n              },\n              setFieldTouched: function (field, isTouched, shouldValidate) {\n                throw new Error('Function not implemented.');\n              },\n              validateForm: function (values) {\n                throw new Error('Function not implemented.');\n              },\n              validateField: function (field) {\n                throw new Error('Function not implemented.');\n              },\n              resetForm: function (nextState) {\n                throw new Error('Function not implemented.');\n              },\n              submitForm: undefined,\n              setFormikState: function (f, cb) {\n                throw new Error('Function not implemented.');\n              },\n              handleSubmit: function (e) {\n                throw new Error('Function not implemented.');\n              },\n              handleReset: function (e) {\n                throw new Error('Function not implemented.');\n              },\n              handleBlur: {},\n              handleChange: {},\n              getFieldProps: function (props) {\n                throw new Error('Function not implemented.');\n              },\n              getFieldMeta: function (name) {\n                throw new Error('Function not implemented.');\n              },\n              getFieldHelpers: function (name) {\n                throw new Error('Function not implemented.');\n              },\n              dirty: false,\n              isValid: false,\n              initialValues: undefined,\n              initialErrors: undefined,\n              initialTouched: undefined,\n              registerField: function (name, fns) {\n                throw new Error('Function not implemented.');\n              },\n              unregisterField: function (name) {\n                throw new Error('Function not implemented.');\n              }\n              // value={props.values.title}\n              // onChange={props.handleChange}\n              // error={\n              //    props.touched.title && Boolean(props.errors.title)\n              // }\n              // helperText={props.touched.title && props.errors.title}\n              ,\n              ...editorTitleProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorDescriptionField, {\n              value: props.values.description,\n              onChange: props.handleChange,\n              error: props.touched.description && Boolean(props.errors.description),\n              helperText: props.touched.description && props.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorSubtasksFieldArr, {\n              subtasks: props.values.subtasks,\n              value: props.values.subtasks,\n              onChange: props.handleChange,\n              tochedSubtasks: props.touched.subtasks,\n              errorsSubtasks: props.errors.subtasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorSelectField, {\n              value: props.values.status,\n              onChange: props.handleChange,\n              cols: cols\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n              type: \"submit\",\n              buttonSize: \"small\",\n              color: \"primary\",\n              sx: btnSx,\n              children: isExisting ? 'Save Changes' : 'Create Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)\n    // </Paper>\n    // </Overlay>\n  );\n};\n_s(EditAddTaskModal, \"GBnZr9ay7rLkAzIYWZCbNtG6BaY=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n_c = EditAddTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditAddTaskModal\");","map":{"version":3,"names":["Typography","Form","btnSx","EditorTitleField","EditorDescriptionField","EditorSelectField","EditorSubtasksFieldArr","EditorFormik","AppBtn","useAppSelector","EditAddTaskModal","cols","state","data","activeBoard","columns","isExisting","modals","isExistingTask","props","editorTitleProps","value","values","title","onChange","handleChange","error","touched","errors","helperText","undefined","status","Error","isSubmitting","shouldValidate","field","message","isTouched","nextState","f","cb","e","name","fns","description","Boolean","subtasks"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx"],"sourcesContent":["import { Paper, Typography } from '@mui/material';\n\nimport { FieldHelperProps, FieldInputProps, FieldMetaProps, FieldValidator, Form, FormikErrors, FormikProps, FormikState, FormikTouched, FormikValues } from 'formik';\n\nimport { editorStyles, btnSx } from './editorStyles';\n\nimport {\n   EditorTitleField,\n   EditorDescriptionField,\n   EditorSelectField,\n   EditorSubtasksFieldArr,\n   EditorFormik,\n} from '.';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\nimport { SetStateAction, FormEvent, SyntheticEvent } from 'react';\n\nexport const EditAddTaskModal = () => {\n   const cols = useAppSelector((state) => state.data.activeBoard.columns);\n   const isExisting = useAppSelector((state) => state.modals.isExistingTask);\n\n   return (\n      // <Overlay>\n      // <Paper elevation={0} sx={editorStyles(theme)}>\n\n      <>\n         <Typography variant='h3'>\n            {isExisting ? 'Edit task' : 'Add new task'}\n         </Typography>\n\n         <EditorFormik>\n            {(props) => {\n               const editorTitleProps = {\n                  value: props.values.title,\n                  onChange: props.handleChange,\n                  error: props.touched.title && !!props.errors.title,\n                  helperText: props.touched.title && props.errors.title,\n               };\n               return (\n                  <Form>\n                     <EditorTitleField\n                     values={undefined} errors={undefined} touched={undefined} isSubmitting={false} isValidating={false} submitCount={0} setStatus={function (status?: any): void {\n                        throw new Error('Function not implemented.');\n                     } } setErrors={function (errors: FormikErrors<FormikValues>): void {\n                        throw new Error('Function not implemented.');\n                     } } setSubmitting={function (isSubmitting: boolean): void {\n                        throw new Error('Function not implemented.');\n                     } } setTouched={function (touched: FormikTouched<FormikValues>, shouldValidate?: boolean | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } setValues={function (values: SetStateAction<FormikValues>, shouldValidate?: boolean | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } setFieldValue={function (field: string, value: any, shouldValidate?: boolean | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } setFieldError={function (field: string, message: string | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } setFieldTouched={function (field: string, isTouched?: boolean | undefined, shouldValidate?: boolean | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } validateForm={function (values?: any): Promise<FormikErrors<FormikValues>> {\n                        throw new Error('Function not implemented.');\n                     } } validateField={function (field: string): void {\n                        throw new Error('Function not implemented.');\n                     } } resetForm={function (nextState?: Partial<FormikState<FormikValues>> | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } submitForm={undefined} setFormikState={function (f: FormikState<FormikValues> | ((prevState: FormikState<FormikValues>) => FormikState<FormikValues>), cb?: (() => void) | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } handleSubmit={function (e?: FormEvent<HTMLFormElement> | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } handleReset={function (e?: SyntheticEvent<any, Event> | undefined): void {\n                        throw new Error('Function not implemented.');\n                     } } handleBlur={{}} handleChange={{}} getFieldProps={function <Value = any>(props: any): FieldInputProps<Value> {\n                        throw new Error('Function not implemented.');\n                     } } getFieldMeta={function <Value>(name: string): FieldMetaProps<Value> {\n                        throw new Error('Function not implemented.');\n                     } } getFieldHelpers={function <Value = any>(name: string): FieldHelperProps<Value> {\n                        throw new Error('Function not implemented.');\n                     } } dirty={false} isValid={false} initialValues={undefined} initialErrors={undefined} initialTouched={undefined} registerField={function (name: string, fns: { validate?: FieldValidator | undefined; }): void {\n                        throw new Error('Function not implemented.');\n                     } } unregisterField={function (name: string): void {\n                        throw new Error('Function not implemented.');\n                     } }\n                     // value={props.values.title}\n                     // onChange={props.handleChange}\n                     // error={\n                     //    props.touched.title && Boolean(props.errors.title)\n                     // }\n                     // helperText={props.touched.title && props.errors.title}\n                     {...editorTitleProps}                        // {...props}\n                        // props={props}\n                     />\n\n                     <EditorDescriptionField\n                        value={props.values.description}\n                        onChange={props.handleChange}\n                        error={\n                           props.touched.description &&\n                           Boolean(props.errors.description)\n                        }\n                        helperText={\n                           props.touched.description && props.errors.description\n                        }\n                     />\n\n                     <EditorSubtasksFieldArr\n                        subtasks={props.values.subtasks}\n                        value={props.values.subtasks}\n                        onChange={props.handleChange}\n                        tochedSubtasks={props.touched.subtasks}\n                        errorsSubtasks={props.errors.subtasks}\n                     />\n\n                     <EditorSelectField\n                        value={props.values.status}\n                        onChange={props.handleChange}\n                        cols={cols}\n                     />\n\n                     <AppBtn\n                        type='submit'\n                        buttonSize='small'\n                        color='primary'\n                        sx={btnSx}\n                     >\n                        {isExisting ? 'Save Changes' : 'Create Task'}\n                     </AppBtn>\n                  </Form>\n               );\n            }}\n         </EditorFormik>\n      </>\n      // </Paper>\n      // </Overlay>\n   );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}