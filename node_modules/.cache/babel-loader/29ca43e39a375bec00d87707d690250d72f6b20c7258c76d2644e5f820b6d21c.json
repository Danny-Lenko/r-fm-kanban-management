{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditorSubtasks/Subtask/Subtask.tsx\",\n  _s = $RefreshSig$();\nimport { useField } from 'formik';\nimport { IconButton, TextField, Stack } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Subtask = _ref => {\n  _s();\n  let {\n    index,\n    arrayHelpers\n  } = _ref;\n  const [field, meta] = useField(`subtasks.${index}`);\n  const isTouched = meta.touched;\n  const error = isTouched && meta.error;\n  const placeholder = placeholders[index] || `e.g. Seems like no time for coffee anymore`;\n  const removeSubtask = (arr, index) => {\n    arr.remove(index);\n  };\n  const stackProps = {\n    direction: 'row',\n    gap: 2\n  };\n  const fieldProps = {\n    size: 'small',\n    fullWidth: true,\n    placeholder,\n    error: !!error,\n    helperText: isTouched && error ? error : ''\n  };\n  const xButtonProps = {\n    sx: {\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    onClick: () => removeSubtask(arrayHelpers, index)\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    ...stackProps,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      ...field,\n      ...fieldProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      ...xButtonProps,\n      children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Subtask, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = Subtask;\nvar _c;\n$RefreshReg$(_c, \"Subtask\");","map":{"version":3,"names":["useField","IconButton","TextField","Stack","ClearIcon","Subtask","index","arrayHelpers","field","meta","isTouched","touched","error","placeholder","placeholders","removeSubtask","arr","remove","stackProps","direction","gap","fieldProps","size","fullWidth","helperText","xButtonProps","sx","backgroundColor","onClick"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditorSubtasks/Subtask/Subtask.tsx"],"sourcesContent":["import { useField, FieldArrayRenderProps } from 'formik';\nimport { IconButton, TextField, Stack } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\n\ninterface Props {\n   index: number;\n   arrayHelpers: FieldArrayRenderProps;\n}\n\n\n\nexport const Subtask: React.FC<Props> = ({ index, arrayHelpers }) => {\n   const [field, meta] = useField(`subtasks.${index}`);\n   const isTouched = meta.touched;\n   const error = isTouched && meta.error;\n\n   const placeholder =\n      placeholders[index] || `e.g. Seems like no time for coffee anymore`;\n\n   const removeSubtask = (arr: FieldArrayRenderProps, index: number) => {\n      arr.remove(index);\n   };\n\n   const stackProps = {\n      direction: 'row' as 'row',\n      gap: 2,\n   };\n\n   const fieldProps = {\n      size: 'small' as 'small',\n      fullWidth: true,\n      placeholder,\n      error: !!error,\n      helperText: isTouched && error ? error : '',\n   };\n\n   const xButtonProps = {\n      sx: { '&:hover': { backgroundColor: 'transparent' } },\n      onClick: () => removeSubtask(arrayHelpers, index),\n   };\n\n   return (\n      <Stack {...stackProps}>\n         <TextField {...field} {...fieldProps} />\n         <IconButton {...xButtonProps}>\n            <ClearIcon fontSize='small' />\n         </IconButton>\n      </Stack>\n   );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAA+B,QAAQ;AACxD,SAASC,UAAU,EAAEC,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAC5D,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AASlD,OAAO,MAAMC,OAAwB,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,KAAK;IAAEC;EAAa,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGT,QAAQ,CAAE,YAAWM,KAAM,EAAC,CAAC;EACnD,MAAMI,SAAS,GAAGD,IAAI,CAACE,OAAO;EAC9B,MAAMC,KAAK,GAAGF,SAAS,IAAID,IAAI,CAACG,KAAK;EAErC,MAAMC,WAAW,GACdC,YAAY,CAACR,KAAK,CAAC,IAAK,4CAA2C;EAEtE,MAAMS,aAAa,GAAG,CAACC,GAA0B,EAAEV,KAAa,KAAK;IAClEU,GAAG,CAACC,MAAM,CAACX,KAAK,CAAC;EACpB,CAAC;EAED,MAAMY,UAAU,GAAG;IAChBC,SAAS,EAAE,KAAc;IACzBC,GAAG,EAAE;EACR,CAAC;EAED,MAAMC,UAAU,GAAG;IAChBC,IAAI,EAAE,OAAkB;IACxBC,SAAS,EAAE,IAAI;IACfV,WAAW;IACXD,KAAK,EAAE,CAAC,CAACA,KAAK;IACdY,UAAU,EAAEd,SAAS,IAAIE,KAAK,GAAGA,KAAK,GAAG;EAC5C,CAAC;EAED,MAAMa,YAAY,GAAG;IAClBC,EAAE,EAAE;MAAE,SAAS,EAAE;QAAEC,eAAe,EAAE;MAAc;IAAE,CAAC;IACrDC,OAAO,EAAE,MAAMb,aAAa,CAACR,YAAY,EAAED,KAAK;EACnD,CAAC;EAED,oBACG,QAAC,KAAK;IAAA,GAAKY,UAAU;IAAA,wBAClB,QAAC,SAAS;MAAA,GAAKV,KAAK;MAAA,GAAMa;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI,eACxC,QAAC,UAAU;MAAA,GAAKI,YAAY;MAAA,uBACzB,QAAC,SAAS;QAAC,QAAQ,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACR;AAEd,CAAC;AAAC,GAtCWpB,OAAwB;EAAA,QACZL,QAAQ;AAAA;AAAA,KADpBK,OAAwB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}