{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/BoardsList/BoardsList.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { List } from '@mui/material';\nimport { setBoardEditing, setXsBoardsOpen } from '../../../../main/slices/modalSlice';\nimport { useAppSelector, useAppDispatch } from '../../hooks';\nimport { assignActiveBoard } from '../../../../main/slices/dataSlice';\nimport { CssBtnBox, CssBoardsLabel, BoardBtn } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BoardsList = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const {\n    boards\n  } = useAppSelector(state => state.data);\n  const {\n    xsBoardsOpen\n  } = useAppSelector(state => state.modals);\n  const handleBoardSwitch = _ref => {\n    let {\n      id,\n      path\n    } = _ref;\n    dispatch(assignActiveBoard(id));\n    navigate(`${path}`);\n  };\n  const handleCreateBoardClick = () => {\n    dispatch(setBoardEditing(true));\n    dispatch(setXsBoardsOpen(false));\n  };\n  const label = !xsBoardsOpen ? 'drawer' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBoardsLabel, {\n      variant: \"h5\",\n      \"aria-label\": label,\n      children: [\"all boards (\", boards.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CssBtnBox, {\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: boards.map(board => {\n          const {\n            path,\n            name,\n            id\n          } = board;\n          return /*#__PURE__*/_jsxDEV(BoardBtn, {\n            props: {\n              path,\n              btnClick: () => handleBoardSwitch({\n                id,\n                path\n              }),\n              name\n            }\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BoardBtn, {\n        props: {\n          path: null,\n          btnClick: () => handleCreateBoardClick(),\n          name: '+ Create New Board'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(BoardsList, \"wkTIFOezJsDjwAm64UxkftwpJMM=\", false, function () {\n  return [useAppDispatch, useNavigate, useAppSelector, useAppSelector];\n});\n_c = BoardsList;\nvar _c;\n$RefreshReg$(_c, \"BoardsList\");","map":{"version":3,"names":["useNavigate","List","setBoardEditing","setXsBoardsOpen","useAppSelector","useAppDispatch","assignActiveBoard","CssBtnBox","CssBoardsLabel","BoardBtn","BoardsList","dispatch","navigate","boards","state","data","xsBoardsOpen","modals","handleBoardSwitch","id","path","handleCreateBoardClick","label","length","map","board","name","btnClick"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/BoardsList/BoardsList.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { List } from '@mui/material';\n\nimport {\n   setBoardEditing,\n   setXsBoardsOpen,\n} from '../../../../main/slices/modalSlice';\nimport { useAppSelector, useAppDispatch } from '../../hooks';\nimport { assignActiveBoard } from '../../../../main/slices/dataSlice';\n\nimport { CssBtnBox, CssBoardsLabel, BoardBtn } from '.';\n\nexport const BoardsList = () => {\n   const dispatch = useAppDispatch();\n   const navigate = useNavigate();\n\n   const { boards } = useAppSelector((state) => state.data);\n   const { xsBoardsOpen } = useAppSelector((state) => state.modals);\n\n   const handleBoardSwitch = ({ id, path }: { id: number; path: string }) => {\n      dispatch(assignActiveBoard(id));\n      navigate(`${path}`);\n   };\n\n   const handleCreateBoardClick = () => {\n      dispatch(setBoardEditing(true));\n      dispatch(setXsBoardsOpen(false));\n   };\n\n   const label = !xsBoardsOpen ? 'drawer' : '';\n\n   return (\n      <>\n         <CssBoardsLabel variant='h5' aria-label={label}>\n            all boards ({boards.length})\n         </CssBoardsLabel>\n\n         <CssBtnBox>\n            <List>\n               {boards.map((board) => {\n                  const { path, name, id } = board;\n                  return (\n                     <BoardBtn\n                        key={id}\n                        props={{\n                           path,\n                           btnClick: () => handleBoardSwitch({ id, path }),\n                           name,\n                        }}\n                     />\n                  );\n               })}\n            </List>\n\n            <BoardBtn\n               props={{\n                  path: null,\n                  btnClick: () => handleCreateBoardClick(),\n                  name: '+ Create New Board',\n               }}\n            />\n         </CssBtnBox>\n      </>\n   );\n};\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,eAAe;AAEpC,SACGC,eAAe,EACfC,eAAe,QACX,oCAAoC;AAC3C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,SAASC,iBAAiB,QAAQ,mCAAmC;AAErE,SAASC,SAAS,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,GAAG;AAAC;AAAA;AAExD,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC7B,MAAMC,QAAQ,GAAGN,cAAc,EAAE;EACjC,MAAMO,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAM;IAAEa;EAAO,CAAC,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACxD,MAAM;IAAEC;EAAa,CAAC,GAAGZ,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACG,MAAM,CAAC;EAEhE,MAAMC,iBAAiB,GAAG,QAAgD;IAAA,IAA/C;MAAEC,EAAE;MAAEC;IAAmC,CAAC;IAClET,QAAQ,CAACL,iBAAiB,CAACa,EAAE,CAAC,CAAC;IAC/BP,QAAQ,CAAE,GAAEQ,IAAK,EAAC,CAAC;EACtB,CAAC;EAED,MAAMC,sBAAsB,GAAG,MAAM;IAClCV,QAAQ,CAACT,eAAe,CAAC,IAAI,CAAC,CAAC;IAC/BS,QAAQ,CAACR,eAAe,CAAC,KAAK,CAAC,CAAC;EACnC,CAAC;EAED,MAAMmB,KAAK,GAAG,CAACN,YAAY,GAAG,QAAQ,GAAG,EAAE;EAE3C,oBACG;IAAA,wBACG,QAAC,cAAc;MAAC,OAAO,EAAC,IAAI;MAAC,cAAYM,KAAM;MAAA,2BAC/BT,MAAM,CAACU,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eAEjB,QAAC,SAAS;MAAA,wBACP,QAAC,IAAI;QAAA,UACDV,MAAM,CAACW,GAAG,CAAEC,KAAK,IAAK;UACpB,MAAM;YAAEL,IAAI;YAAEM,IAAI;YAAEP;UAAG,CAAC,GAAGM,KAAK;UAChC,oBACG,QAAC,QAAQ;YAEN,KAAK,EAAE;cACJL,IAAI;cACJO,QAAQ,EAAE,MAAMT,iBAAiB,CAAC;gBAAEC,EAAE;gBAAEC;cAAK,CAAC,CAAC;cAC/CM;YACH;UAAE,GALGP,EAAE;YAAA;YAAA;YAAA;UAAA,QAMR;QAER,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eAEP,QAAC,QAAQ;QACN,KAAK,EAAE;UACJC,IAAI,EAAE,IAAI;UACVO,QAAQ,EAAE,MAAMN,sBAAsB,EAAE;UACxCK,IAAI,EAAE;QACT;MAAE;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACO;EAAA,gBACZ;AAET,CAAC;AAAC,GApDWhB,UAAU;EAAA,QACHL,cAAc,EACdL,WAAW,EAETI,cAAc,EACRA,cAAc;AAAA;AAAA,KAL7BM,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}