{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { setDeletingBoard, setDeletingTask } from '../../../../main/slices/modalSlice';\nexport let ModalTypes;\n(function (ModalTypes) {\n  ModalTypes[\"Delete\"] = \"delete\";\n  ModalTypes[\"Temp\"] = \"temp\";\n})(ModalTypes || (ModalTypes = {}));\nexport const useAppModal = () => {\n  _s();\n  const {\n    taskManaging,\n    taskEditing,\n    boardManaging,\n    deletingBoard,\n    deletingTask\n  } = useAppSelector(state => state.modals);\n  const open = taskManaging || taskEditing || boardManaging || deletingBoard || deletingTask;\n  const dispatch = useAppDispatch();\n  const type = deletingBoard ? ModalTypes.Delete : ModalTypes.Temp;\n  function closeDeletingModal() {\n    dispatch(setDeletingBoard(false));\n    dispatch(setDeletingTask(false));\n  }\n  const getOnClose = type => ({\n    [ModalTypes.Delete]: closeDeletingModal,\n    [ModalTypes.Temp]: closeDeletingModal\n\n    // [MODAL_TYPES.optional]: OptionalModal,\n  })[type];\n  return {\n    type,\n    open,\n    getOnClose\n  };\n};\n\n// export const useAppModal = () => {\n//    const [isModalOpen, setIsModalOpen] = useState(false);\n\n//    const handleOpen = () => {\n//       setIsModalOpen(true);\n//    };\n\n//    const handleClose = () => {\n//       setIsModalOpen(false);\n//    };\n\n//    return {\n//       isModalOpen,\n//       handleOpen,\n//       handleClose\n//    }\n// }\n_s(useAppModal, \"gzfrs6ohFj3tpgk/JGS0mgtrdn4=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});","map":{"version":3,"names":["useAppDispatch","useAppSelector","setDeletingBoard","setDeletingTask","ModalTypes","useAppModal","taskManaging","taskEditing","boardManaging","deletingBoard","deletingTask","state","modals","open","dispatch","type","Delete","Temp","closeDeletingModal","getOnClose"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/useAppModal.ts"],"sourcesContent":["import { useAppDispatch, useAppSelector } from '../../hooks';\nimport {\n   setDeletingBoard,\n   setDeletingTask,\n} from '../../../../main/slices/modalSlice';\n\nexport enum ModalTypes {\n   // taskAddEdit = 'taskAddEdit',\n   // taskManage = 'taskManage',\n   // boardManage = 'boardManage',\n   Delete = 'delete',\n   Temp = 'temp',\n}\n\nexport const useAppModal = () => {\n   const {\n      taskManaging,\n      taskEditing,\n      boardManaging,\n      deletingBoard,\n      deletingTask,\n   } = useAppSelector((state) => state.modals);\n   const open =\n      taskManaging ||\n      taskEditing ||\n      boardManaging ||\n      deletingBoard ||\n      deletingTask;\n\n   const dispatch = useAppDispatch();\n\n   const type = deletingBoard ? ModalTypes.Delete : ModalTypes.Temp;\n\n   function closeDeletingModal() {\n      dispatch(setDeletingBoard(false));\n      dispatch(setDeletingTask(false));\n   }\n\n   const getOnClose = (type: ModalTypes) =>\n      ({\n         [ModalTypes.Delete]: closeDeletingModal,\n         [ModalTypes.Temp]: closeDeletingModal,\n\n         // [MODAL_TYPES.optional]: OptionalModal,\n      }[type]);\n\n   return { type, open, getOnClose };\n};\n\n// export const useAppModal = () => {\n//    const [isModalOpen, setIsModalOpen] = useState(false);\n\n//    const handleOpen = () => {\n//       setIsModalOpen(true);\n//    };\n\n//    const handleClose = () => {\n//       setIsModalOpen(false);\n//    };\n\n//    return {\n//       isModalOpen,\n//       handleOpen,\n//       handleClose\n//    }\n// }\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,SACGC,gBAAgB,EAChBC,eAAe,QACX,oCAAoC;AAE3C,WAAYC,UAAU;AAMrB,WANWA,UAAU;EAAVA,UAAU;EAAVA,UAAU;AAAA,GAAVA,UAAU,KAAVA,UAAU;AAQtB,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC9B,MAAM;IACHC,YAAY;IACZC,WAAW;IACXC,aAAa;IACbC,aAAa;IACbC;EACH,CAAC,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAC3C,MAAMC,IAAI,GACPP,YAAY,IACZC,WAAW,IACXC,aAAa,IACbC,aAAa,IACbC,YAAY;EAEf,MAAMI,QAAQ,GAAGd,cAAc,EAAE;EAEjC,MAAMe,IAAI,GAAGN,aAAa,GAAGL,UAAU,CAACY,MAAM,GAAGZ,UAAU,CAACa,IAAI;EAEhE,SAASC,kBAAkB,GAAG;IAC3BJ,QAAQ,CAACZ,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACjCY,QAAQ,CAACX,eAAe,CAAC,KAAK,CAAC,CAAC;EACnC;EAEA,MAAMgB,UAAU,GAAIJ,IAAgB,IAChC;IACE,CAACX,UAAU,CAACY,MAAM,GAAGE,kBAAkB;IACvC,CAACd,UAAU,CAACa,IAAI,GAAGC;;IAEnB;EACH,CAAC,EAACH,IAAI,CAAE;EAEX,OAAO;IAAEA,IAAI;IAAEF,IAAI;IAAEM;EAAW,CAAC;AACpC,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,GAnDad,WAAW;EAAA,QAOjBJ,cAAc,EAQDD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}