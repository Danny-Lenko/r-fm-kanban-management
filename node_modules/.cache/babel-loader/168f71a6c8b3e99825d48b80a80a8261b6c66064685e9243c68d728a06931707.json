{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/DeleteModal/index.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\n// mui\nimport { Typography, Stack, Box, useTheme } from '@mui/material';\n// components\nimport { AppBtn } from '../..';\n// project\nimport { setDeletingBoard, setDeletingTask } from '../../../../../main/slices/modalSlice';\nimport { setBoards, assignActiveBoard } from '../../../../../main/slices/dataSlice';\nimport { useAppSelector, useAppDispatch } from '../../../hooks';\nimport { deleteModalStyles, deleteBtnSx } from './deleteModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeleteModal = () => {\n  _s();\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const {\n    deletingBoard,\n    deletingTask\n  } = useAppSelector(state => state.modals);\n  const {\n    activeBoard,\n    activeColId,\n    activeTaskId,\n    boards\n  } = useAppSelector(state => state.data);\n  const activeCol = activeBoard.columns.find(col => col.id === activeColId);\n  const activeTask = activeCol === null || activeCol === void 0 ? void 0 : activeCol.tasks.find(task => task.id === activeTaskId);\n  function deleteBoardOrTask() {\n    const boardsUpdated = deletingBoard ? boards.filter(board => board.id !== activeBoard.id).map((board, i) => ({\n      ...board,\n      id: i\n    })) : boards.map((board, i) => board.id !== activeBoard.id ? board : {\n      ...board,\n      columns: board.columns.map(col => col.id !== activeColId ? col : {\n        ...col,\n        tasks: col.tasks.filter(task => task.id !== activeTaskId).map((task, i) => ({\n          ...task,\n          id: i\n        }))\n      })\n    });\n    dispatch(setBoards(boardsUpdated));\n    if (!deletingBoard) {\n      dispatch(assignActiveBoard(activeBoard.id));\n    } else {\n      navigate('/');\n      if (boards.length <= 1) {\n        const zeroBoards = [{\n          id: 0,\n          name: 'Zero Board',\n          columns: [],\n          path: 'zero-board'\n        }];\n        dispatch(setBoards(zeroBoards));\n      }\n      dispatch(assignActiveBoard(0));\n    }\n    closeDeletingModal();\n  }\n  function closeDeletingModal() {\n    dispatch(setDeletingBoard(false));\n    dispatch(setDeletingTask(false));\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: deleteModalStyles,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: deletingBoard ? 'Delete this board?' : 'Delete this task?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: deletingBoard ? `Are you sure you want to delete the ‘${activeBoard.name}’ board? This action will remove all columns and tasks and cannot be reversed.` : `Are you sure you want to delete the ‘${activeTask === null || activeTask === void 0 ? void 0 : activeTask.title}’ task and its subtasks? This action cannot be reversed.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(AppBtn, {\n        buttonSize: \"small\",\n        sx: deleteBtnSx(theme),\n        onClick: deleteBoardOrTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n        buttonSize: \"small\",\n        color: \"secondary\",\n        onClick: closeDeletingModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_s(DeleteModal, \"pFj04iP7lMwoUCHuxY3roOL3xjM=\", false, function () {\n  return [useTheme, useAppDispatch, useNavigate, useAppSelector, useAppSelector];\n});\n_c = DeleteModal;\nvar _c;\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"names":["useNavigate","Typography","Stack","Box","useTheme","AppBtn","setDeletingBoard","setDeletingTask","setBoards","assignActiveBoard","useAppSelector","useAppDispatch","deleteModalStyles","deleteBtnSx","DeleteModal","theme","dispatch","navigate","deletingBoard","deletingTask","state","modals","activeBoard","activeColId","activeTaskId","boards","data","activeCol","columns","find","col","id","activeTask","tasks","task","deleteBoardOrTask","boardsUpdated","filter","board","map","i","length","zeroBoards","name","path","closeDeletingModal","title"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/DeleteModal/index.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\n// mui\nimport { Typography, Stack, Box, useTheme } from '@mui/material';\n// components\nimport { AppBtn } from '../..';\n// project\nimport {\n   setDeletingBoard,\n   setDeletingTask,\n} from '../../../../../main/slices/modalSlice';\nimport {\n   setBoards,\n   assignActiveBoard,\n} from '../../../../../main/slices/dataSlice';\nimport { useAppSelector, useAppDispatch } from '../../../hooks';\n\nimport { deleteModalStyles, deleteBtnSx } from './deleteModalStyles';\n\nexport const DeleteModal: React.FC = () => {\n   const theme = useTheme();\n   const dispatch = useAppDispatch();\n   const navigate = useNavigate();\n\n   const { deletingBoard, deletingTask } = useAppSelector(\n      (state) => state.modals,\n   );\n   const { activeBoard, activeColId, activeTaskId, boards } = useAppSelector(\n      (state) => state.data,\n   );\n\n   const activeCol = activeBoard.columns.find((col) => col.id === activeColId);\n   const activeTask = activeCol?.tasks.find((task) => task.id === activeTaskId);\n\n   function deleteBoardOrTask() {\n      const boardsUpdated = deletingBoard\n         ? boards\n              .filter((board) => board.id !== activeBoard.id)\n              .map((board, i) => ({ ...board, id: i }))\n         : boards.map((board, i) =>\n              board.id !== activeBoard.id\n                 ? board\n                 : {\n                      ...board,\n                      columns: board.columns.map((col) =>\n                         col.id !== activeColId\n                            ? col\n                            : {\n                                 ...col,\n                                 tasks: col.tasks\n                                    .filter((task) => task.id !== activeTaskId)\n                                    .map((task, i) => ({ ...task, id: i })),\n                              },\n                      ),\n                   },\n           );\n\n      dispatch(setBoards(boardsUpdated));\n      if (!deletingBoard) {\n         dispatch(assignActiveBoard(activeBoard.id));\n      } else {\n         navigate('/');\n         if (boards.length <= 1) {\n            const zeroBoards = [\n               { id: 0, name: 'Zero Board', columns: [], path: 'zero-board' },\n            ];\n            dispatch(setBoards(zeroBoards));\n         }\n         dispatch(assignActiveBoard(0));\n      }\n      closeDeletingModal();\n   }\n\n   function closeDeletingModal() {\n      dispatch(setDeletingBoard(false));\n      dispatch(setDeletingTask(false));\n   }\n\n   return (\n      <Box sx={deleteModalStyles}>\n         <Typography variant='h3'>\n            {deletingBoard ? 'Delete this board?' : 'Delete this task?'}\n         </Typography>\n         <Typography variant='body1'>\n            {deletingBoard\n               ? `Are you sure you want to delete the ‘${activeBoard.name}’ board? This action will remove all columns and tasks and cannot be reversed.`\n               : `Are you sure you want to delete the ‘${activeTask?.title}’ task and its subtasks? This action cannot be reversed.`}\n         </Typography>\n         <Stack direction='row' spacing={2}>\n            <AppBtn\n               buttonSize='small'\n               sx={deleteBtnSx(theme)}\n               onClick={deleteBoardOrTask}\n            >\n               Delete\n            </AppBtn>\n            <AppBtn\n               buttonSize='small'\n               color='secondary'\n               onClick={closeDeletingModal}\n            >\n               Cancel\n            </AppBtn>\n         </Stack>\n      </Box>\n   );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}