{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/ManageTaskModal/ManagerSelect/ManagerSelect.tsx\";\nimport { MenuItem } from '@mui/material';\nimport { AppSelect, CssLabel } from '../../..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ManagerSelect = _ref => {\n  let {\n    formikValues\n  } = _ref;\n  const {\n    formik,\n    columns\n  } = formikValues;\n  const options = columns.map(col => col.name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssLabel, {\n      children: \"Current Status\",\n      htmlFor: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(AppSelect, {\n      id: \"status\",\n      name: \"status\",\n      value: formik.values.status,\n      onChange: formik.handleChange,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_c = ManagerSelect;\nvar _c;\n$RefreshReg$(_c, \"ManagerSelect\");","map":{"version":3,"names":["MenuItem","AppSelect","CssLabel","ManagerSelect","formikValues","formik","columns","options","map","col","name","values","status","handleChange","option"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/ManageTaskModal/ManagerSelect/ManagerSelect.tsx"],"sourcesContent":["import { FormikValues } from 'formik';\nimport { MenuItem } from '@mui/material';\nimport { AppSelect, CssLabel } from '../../..';\n\ntype Props<T extends Column> = {\n   formikValues: {\n      formik: FormikValues;\n      columns: Column[];\n   };\n};\n\ninterface Column {\n   name: string;\n}\n\nexport const ManagerSelect: React.FC<Props<Column>> = ({ formikValues }) => {\n   const { formik, columns } = formikValues;\n   const options = columns.map((col) => col.name);\n\n   return (\n      <>\n         <CssLabel children='Current Status' htmlFor='status' />\n\n         <AppSelect\n            id='status'\n            name='status'\n            value={formik.values.status}\n            onChange={formik.handleChange}\n         >\n            {options.map((option: string) => (\n               <MenuItem key={option} value={option}>\n                  {option}\n               </MenuItem>\n            ))}\n         </AppSelect>\n      </>\n   );\n};\n"],"mappings":";AACA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,UAAU;AAAC;AAAA;AAa/C,OAAO,MAAMC,aAAsC,GAAG,QAAsB;EAAA,IAArB;IAAEC;EAAa,CAAC;EACpE,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,YAAY;EACxC,MAAMG,OAAO,GAAGD,OAAO,CAACE,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;EAE9C,oBACG;IAAA,wBACG,QAAC,QAAQ;MAAC,QAAQ,EAAC,gBAAgB;MAAC,OAAO,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAEvD,QAAC,SAAS;MACP,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,QAAQ;MACb,KAAK,EAAEL,MAAM,CAACM,MAAM,CAACC,MAAO;MAC5B,QAAQ,EAAEP,MAAM,CAACQ,YAAa;MAAA,UAE7BN,OAAO,CAACC,GAAG,CAAEM,MAAc,iBACzB,QAAC,QAAQ;QAAc,KAAK,EAAEA,MAAO;QAAA,UACjCA;MAAM,GADKA,MAAM;QAAA;QAAA;QAAA;MAAA,QAGvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA,gBACZ;AAET,CAAC;AAAC,KAtBWX,aAAsC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}