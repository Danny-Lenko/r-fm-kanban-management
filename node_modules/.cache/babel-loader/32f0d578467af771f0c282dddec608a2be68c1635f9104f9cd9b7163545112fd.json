{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/modules/NoColumnsBoard/ZeroBoard.tsx\",\n  _s = $RefreshSig$();\nimport { setBoards, assignActiveBoard } from '../../main/slices/dataSlice';\nimport { useAppSelector, useAppDispatch } from '../../library/common/hooks';\nimport { COLUMNCOLORS } from '../../library/common/constants';\nimport { AppBtn } from '../../library/common/components';\nimport { sx } from './zeroBoardStyles';\nimport { CssBoard, CssText } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZeroBoard = () => {\n  _s();\n  const {\n    boards,\n    activeBoardId\n  } = useAppSelector(state => state.data);\n  const dispatch = useAppDispatch();\n  function addCol() {\n    const boardsUpdated = boards.map(board => board.id !== activeBoardId ? board : {\n      ...board,\n      columns: [{\n        id: 0,\n        color: COLUMNCOLORS[0],\n        name: 'NEWCOLUMN1',\n        tasks: []\n      }]\n    });\n    dispatch(setBoards(boardsUpdated));\n    dispatch(assignActiveBoard(activeBoardId));\n  }\n  return /*#__PURE__*/_jsxDEV(CssBoard, {\n    children: [/*#__PURE__*/_jsxDEV(CssText, {\n      sx: sx.content,\n      children: \"This board is empty. Create a new column to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n      buttonSize: \"small\",\n      color: \"primary\",\n      sx: sx.button,\n      onClick: addCol,\n      children: \"+ Add New Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(ZeroBoard, \"EU0fqHtjYUU9d11eUd9zyH5oULc=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = ZeroBoard;\nexport default ZeroBoard;\nvar _c;\n$RefreshReg$(_c, \"ZeroBoard\");","map":{"version":3,"names":["setBoards","assignActiveBoard","useAppSelector","useAppDispatch","COLUMNCOLORS","AppBtn","sx","CssBoard","CssText","ZeroBoard","boards","activeBoardId","state","data","dispatch","addCol","boardsUpdated","map","board","id","columns","color","name","tasks","content","button"],"sources":["/home/danny/projects/r-fm-kanban-management/src/modules/NoColumnsBoard/ZeroBoard.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport { setBoards, assignActiveBoard } from '../../main/slices/dataSlice';\nimport { useAppSelector, useAppDispatch } from '../../library/common/hooks';\nimport { COLUMNCOLORS } from '../../library/common/constants';\n\nimport { AppBtn } from '../../library/common/components';\nimport { sx } from './zeroBoardStyles';\n\nimport { CssBoard, CssText } from '.';\n\nconst ZeroBoard = () => {\n   const { boards, activeBoardId } = useAppSelector((state) => state.data);\n   const dispatch = useAppDispatch();\n\n   function addCol() {\n      const boardsUpdated = boards.map((board) =>\n         board.id !== activeBoardId\n            ? board\n            : {\n                 ...board,\n                 columns: [\n                    {\n                       id: 0,\n                       color: COLUMNCOLORS[0],\n                       name: 'NEWCOLUMN1',\n                       tasks: [],\n                    },\n                 ],\n              },\n      );\n      dispatch(setBoards(boardsUpdated));\n      dispatch(assignActiveBoard(activeBoardId));\n   }\n\n   return (\n      <CssBoard>\n         <CssText sx={sx.content}>\n            This board is empty. Create a new column to get started.\n         </CssText>\n         <AppBtn\n            buttonSize='small'\n            color='primary'\n            sx={sx.button}\n            onClick={addCol}\n         >\n            + Add New Column\n         </AppBtn>\n      </CssBoard>\n   );\n};\n\nexport default ZeroBoard;\n"],"mappings":";;AAGA,SAASA,SAAS,EAAEC,iBAAiB,QAAQ,6BAA6B;AAC1E,SAASC,cAAc,EAAEC,cAAc,QAAQ,4BAA4B;AAC3E,SAASC,YAAY,QAAQ,gCAAgC;AAE7D,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,EAAE,QAAQ,mBAAmB;AAEtC,SAASC,QAAQ,EAAEC,OAAO,QAAQ,GAAG;AAAC;AAEtC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC,MAAM;IAAEC;EAAc,CAAC,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACvE,MAAMC,QAAQ,GAAGX,cAAc,EAAE;EAEjC,SAASY,MAAM,GAAG;IACf,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAG,CAAEC,KAAK,IACpCA,KAAK,CAACC,EAAE,KAAKR,aAAa,GACrBO,KAAK,GACL;MACG,GAAGA,KAAK;MACRE,OAAO,EAAE,CACN;QACGD,EAAE,EAAE,CAAC;QACLE,KAAK,EAAEjB,YAAY,CAAC,CAAC,CAAC;QACtBkB,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE;MACV,CAAC;IAEP,CAAC,CACR;IACDT,QAAQ,CAACd,SAAS,CAACgB,aAAa,CAAC,CAAC;IAClCF,QAAQ,CAACb,iBAAiB,CAACU,aAAa,CAAC,CAAC;EAC7C;EAEA,oBACG,QAAC,QAAQ;IAAA,wBACN,QAAC,OAAO;MAAC,EAAE,EAAEL,EAAE,CAACkB,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEd,eACV,QAAC,MAAM;MACJ,UAAU,EAAC,OAAO;MAClB,KAAK,EAAC,SAAS;MACf,EAAE,EAAElB,EAAE,CAACmB,MAAO;MACd,OAAO,EAAEV,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGV;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEjB,CAAC;AAAC,GAvCIN,SAAS;EAAA,QACsBP,cAAc,EAC/BC,cAAc;AAAA;AAAA,KAF5BM,SAAS;AAyCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}