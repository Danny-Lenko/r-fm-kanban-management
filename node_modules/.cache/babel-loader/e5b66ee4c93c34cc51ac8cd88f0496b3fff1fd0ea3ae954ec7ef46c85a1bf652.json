{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useField } from 'formik';\nconst placeholders = ['e.g. Todo', 'e.g. Doing', 'e.g. On Review', 'e.g. Done', 'e.g. Closed'];\nexport const useColumnProps = _ref => {\n  _s();\n  let {\n    index,\n    arrayHelpers\n  } = _ref;\n  const [field, meta] = useField(`columns.${index}`);\n  const placeholder = placeholders[index] ? placeholders[index] : 'e.g. Consider using a new board';\n  const isTouched = meta.touched;\n  const error = isTouched && meta.error;\n  const removeColumn = _ref2 => {\n    let {\n      arrayHelpers,\n      index\n    } = _ref2;\n    arrayHelpers.remove(index);\n  };\n  const fieldProps = {\n    size: 'small',\n    placeholder,\n    fullWidth: true,\n    error: !!error,\n    helperText: isTouched && error ? error : ''\n  };\n  const buttonProps = {\n    onClick: () => removeColumn({\n      arrayHelpers,\n      index\n    })\n  };\n  return {\n    field,\n    fieldProps,\n    removeColumn,\n    buttonProps\n  };\n};\n_s(useColumnProps, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});","map":{"version":3,"names":["useField","placeholders","useColumnProps","index","arrayHelpers","field","meta","placeholder","isTouched","touched","error","removeColumn","remove","fieldProps","size","fullWidth","helperText","buttonProps","onClick"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditBoardModal/ColumnFields/Column/useColumnProps.ts"],"sourcesContent":["import { useField } from 'formik';\nimport { IFieldArray } from '../../../../../../interfaces';\n\nconst placeholders = [\n   'e.g. Todo',\n   'e.g. Doing',\n   'e.g. On Review',\n   'e.g. Done',\n   'e.g. Closed',\n];\n\nexport const useColumnProps = ({ index, arrayHelpers }: IFieldArray) => {\n   const [field, meta] = useField(`columns.${index}`);\n\n   const placeholder = placeholders[index]\n      ? placeholders[index]\n      : 'e.g. Consider using a new board';\n\n   const isTouched = meta.touched;\n   const error = isTouched && meta.error;\n\n   const removeColumn = ({ arrayHelpers, index }: IFieldArray) => {\n      arrayHelpers.remove(index);\n   };\n\n   const fieldProps = {\n      size: 'small' as 'small',\n      placeholder,\n      fullWidth: true,\n      error: !!error,\n      helperText: isTouched && error ? error : '',\n   };\n\n   const buttonProps = {\n      onClick: () => removeColumn({ arrayHelpers, index }),\n   };\n\n   return { field, fieldProps, removeColumn, buttonProps };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,QAAQ;AAGjC,MAAMC,YAAY,GAAG,CAClB,WAAW,EACX,YAAY,EACZ,gBAAgB,EAChB,WAAW,EACX,aAAa,CACf;AAED,OAAO,MAAMC,cAAc,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEC,KAAK;IAAEC;EAA0B,CAAC;EAChE,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAE,WAAUG,KAAM,EAAC,CAAC;EAElD,MAAMI,WAAW,GAAGN,YAAY,CAACE,KAAK,CAAC,GAClCF,YAAY,CAACE,KAAK,CAAC,GACnB,iCAAiC;EAEtC,MAAMK,SAAS,GAAGF,IAAI,CAACG,OAAO;EAC9B,MAAMC,KAAK,GAAGF,SAAS,IAAIF,IAAI,CAACI,KAAK;EAErC,MAAMC,YAAY,GAAG,SAA0C;IAAA,IAAzC;MAAEP,YAAY;MAAED;IAAmB,CAAC;IACvDC,YAAY,CAACQ,MAAM,CAACT,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMU,UAAU,GAAG;IAChBC,IAAI,EAAE,OAAkB;IACxBP,WAAW;IACXQ,SAAS,EAAE,IAAI;IACfL,KAAK,EAAE,CAAC,CAACA,KAAK;IACdM,UAAU,EAAER,SAAS,IAAIE,KAAK,GAAGA,KAAK,GAAG;EAC5C,CAAC;EAED,MAAMO,WAAW,GAAG;IACjBC,OAAO,EAAE,MAAMP,YAAY,CAAC;MAAEP,YAAY;MAAED;IAAM,CAAC;EACtD,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEQ,UAAU;IAAEF,YAAY;IAAEM;EAAY,CAAC;AAC1D,CAAC;AAAC,GA3BWf,cAAc;EAAA,QACFF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}