{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/modules/Board/TaskCard/TaskCard.tsx\",\n  _s = $RefreshSig$();\nimport Typography from '@mui/material/Typography';\nimport useTheme from '@mui/material/styles/useTheme';\nimport { useAppDispatch } from '../../../library/common/hooks';\nimport { assignActiveTaskCol } from '../../../main/slices/dataSlice';\nimport { setTaskManaging } from '../../../main/slices/modalSlice';\nimport { CssCard } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskCard = task => {\n  _s();\n  const {\n    title,\n    completedSubtasks,\n    subtasks\n  } = task;\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const taskCardStyles = {\n    py: 3,\n    px: 2,\n    cursor: 'pointer',\n    zIndex: 100,\n    boxShadow: '0px 4px 6px rgba(54, 78, 126, 0.101545)',\n    '& .MuiTypography-h4': {\n      color: theme.palette.text.primary,\n      mb: 1\n    },\n    '& .MuiTypography-body2': {\n      color: 'greyCustom.200'\n    }\n  };\n  const handleClick = () => {\n    dispatch(setTaskManaging(true));\n    dispatch(assignActiveTaskCol(task));\n  };\n  return /*#__PURE__*/_jsxDEV(CssCard\n  // sx={taskCardStyles}\n  // onClick={() => {\n  //    dispatch(setTaskManaging(true));\n  //    dispatch(assignActiveTaskCol(task));\n  // }}\n  , {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [completedSubtasks, \" of \", subtasks.length, \" subtasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskCard, \"S8zM4Ca002wv/A/vuoPuilV4Ork=\", false, function () {\n  return [useAppDispatch, useTheme];\n});\n_c = TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["Typography","useTheme","useAppDispatch","assignActiveTaskCol","setTaskManaging","CssCard","TaskCard","task","title","completedSubtasks","subtasks","dispatch","theme","taskCardStyles","py","px","cursor","zIndex","boxShadow","color","palette","text","primary","mb","handleClick","length"],"sources":["/home/danny/projects/r-fm-kanban-management/src/modules/Board/TaskCard/TaskCard.tsx"],"sourcesContent":["import Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { ITask } from '../../../library/interfaces/interfaces';\nimport useTheme from '@mui/material/styles/useTheme';\nimport { useAppDispatch } from '../../../library/common/hooks';\nimport { assignActiveTaskCol } from '../../../main/slices/dataSlice';\nimport { setTaskManaging } from '../../../main/slices/modalSlice';\n\nimport { CssCard } from '.';\n\nexport const TaskCard: React.FC<ITask> = (task) => {\n   const { title, completedSubtasks, subtasks } = task;\n\n   const dispatch = useAppDispatch();\n   const theme = useTheme();\n\n   const taskCardStyles = {\n      py: 3,\n      px: 2,\n      cursor: 'pointer',\n      zIndex: 100,\n      boxShadow: '0px 4px 6px rgba(54, 78, 126, 0.101545)',\n      '& .MuiTypography-h4': {\n         color: theme.palette.text.primary,\n         mb: 1,\n      },\n      '& .MuiTypography-body2': {\n         color: 'greyCustom.200',\n      },\n   };\n\n   const handleClick = () => {\n      dispatch(setTaskManaging(true));\n      dispatch(assignActiveTaskCol(task));\n   };\n\n   return (\n      <CssCard\n         // sx={taskCardStyles}\n         // onClick={() => {\n         //    dispatch(setTaskManaging(true));\n         //    dispatch(assignActiveTaskCol(task));\n         // }}\n         onClick={handleClick}\n      >\n         <Typography variant='h4'>{title}</Typography>\n         <Typography variant='body2'>\n            {completedSubtasks} of {subtasks.length} subtasks\n         </Typography>\n      </CssCard>\n   );\n};\n"],"mappings":";;AACA,OAAOA,UAAU,MAAM,0BAA0B;AAEjD,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,eAAe,QAAQ,iCAAiC;AAEjE,SAASC,OAAO,QAAQ,GAAG;AAAC;AAE5B,OAAO,MAAMC,QAAyB,GAAIC,IAAI,IAAK;EAAA;EAChD,MAAM;IAAEC,KAAK;IAAEC,iBAAiB;IAAEC;EAAS,CAAC,GAAGH,IAAI;EAEnD,MAAMI,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAMU,KAAK,GAAGX,QAAQ,EAAE;EAExB,MAAMY,cAAc,GAAG;IACpBC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,GAAG;IACXC,SAAS,EAAE,yCAAyC;IACpD,qBAAqB,EAAE;MACpBC,KAAK,EAAEP,KAAK,CAACQ,OAAO,CAACC,IAAI,CAACC,OAAO;MACjCC,EAAE,EAAE;IACP,CAAC;IACD,wBAAwB,EAAE;MACvBJ,KAAK,EAAE;IACV;EACH,CAAC;EAED,MAAMK,WAAW,GAAG,MAAM;IACvBb,QAAQ,CAACP,eAAe,CAAC,IAAI,CAAC,CAAC;IAC/BO,QAAQ,CAACR,mBAAmB,CAACI,IAAI,CAAC,CAAC;EACtC,CAAC;EAED,oBACG,QAAC;EACE;EACA;EACA;EACA;EACA;EAAA;IACA,OAAO,EAAEiB,WAAY;IAAA,wBAErB,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAA,UAAEhB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAc,eAC7C,QAAC,UAAU;MAAC,OAAO,EAAC,OAAO;MAAA,WACvBC,iBAAiB,UAAMC,QAAQ,CAACe,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEhB,CAAC;AAAC,GAzCWnB,QAAyB;EAAA,QAGlBJ,cAAc,EACjBD,QAAQ;AAAA;AAAA,KAJZK,QAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}