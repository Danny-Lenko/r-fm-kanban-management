{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx\",\n  _s = $RefreshSig$();\n// import Overlay from '../Overlay/Overlay';\n\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { Form } from 'formik';\n// import TitleField from './EditorTitleField/EditorTitleField';\nimport DescriptionField from './EditorDescriptionField/EditorDescriptionField';\nimport SubtasksFieldArr from './EditorSubtasksFieldArr';\nimport SelectField from './EditorSelectField/EditorSelectField';\nimport EditorFormik from './EditorFormik/EditorFormik';\nimport { btnSx } from './editorStyles';\nimport { EditorTitleField } from './EditorTitleField';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditAddTaskModal = () => {\n  _s();\n  const cols = useAppSelector(state => state.data.activeBoard.columns);\n  const isExisting = useAppSelector(state => state.modals.isExistingTask);\n  const theme = useTheme();\n  return (\n    /*#__PURE__*/\n    // <Overlay>\n    // <Paper elevation={0} sx={editorStyles(theme)}>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: isExisting ? 'Edit task' : 'Add new task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(EditorFormik, {\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(EditorTitleField, {\n            value: props.values.title,\n            onChange: props.handleChange,\n            error: props.touched.title && Boolean(props.errors.title),\n            helperText: props.touched.title && props.errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DescriptionField, {\n            value: props.values.description,\n            onChange: props.handleChange,\n            error: props.touched.description && Boolean(props.errors.description),\n            helperText: props.touched.description && props.errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SubtasksFieldArr, {\n            subtasks: props.values.subtasks,\n            value: props.values.subtasks,\n            onChange: props.handleChange,\n            tochedSubtasks: props.touched.subtasks,\n            errorsSubtasks: props.errors.subtasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            value: props.values.status,\n            onChange: props.handleChange,\n            cols: cols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n            type: \"submit\",\n            buttonSize: \"small\",\n            color: \"primary\",\n            sx: btnSx,\n            children: isExisting ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)\n    // </Paper>\n    // </Overlay>\n  );\n};\n_s(EditAddTaskModal, \"9ctMN8/MPzS+k+GwsYW8Q7QAU68=\", false, function () {\n  return [useAppSelector, useAppSelector, useTheme];\n});\n_c = EditAddTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditAddTaskModal\");","map":{"version":3,"names":["Typography","useTheme","Form","DescriptionField","SubtasksFieldArr","SelectField","EditorFormik","btnSx","EditorTitleField","AppBtn","useAppSelector","EditAddTaskModal","cols","state","data","activeBoard","columns","isExisting","modals","isExistingTask","theme","props","values","title","handleChange","touched","Boolean","errors","description","subtasks","status"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx"],"sourcesContent":["// import Overlay from '../Overlay/Overlay';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { Form, FormikProps, FormikValues } from 'formik';\n// import TitleField from './EditorTitleField/EditorTitleField';\nimport DescriptionField from './EditorDescriptionField/EditorDescriptionField';\nimport SubtasksFieldArr from './EditorSubtasksFieldArr';\nimport SelectField from './EditorSelectField/EditorSelectField';\nimport EditorFormik from './EditorFormik/EditorFormik';\n\nimport { editorStyles, btnSx } from './editorStyles';\n\nimport { EditorTitleField } from './EditorTitleField';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\n\nexport const EditAddTaskModal = () => {\n   const cols = useAppSelector((state) => state.data.activeBoard.columns);\n   const isExisting = useAppSelector((state) => state.modals.isExistingTask);\n   const theme = useTheme();\n\n   return (\n      // <Overlay>\n      // <Paper elevation={0} sx={editorStyles(theme)}>\n\n      <>\n         <Typography variant='h3'>\n            {isExisting ? 'Edit task' : 'Add new task'}\n         </Typography>\n\n         <EditorFormik>\n            {(props) => (\n               <Form>\n                  <EditorTitleField\n                     value={props.values.title}\n                     onChange={props.handleChange}\n                     error={props.touched.title && Boolean(props.errors.title)}\n                     helperText={props.touched.title && props.errors.title}\n                  />\n\n                  <DescriptionField\n                     value={props.values.description}\n                     onChange={props.handleChange}\n                     error={\n                        props.touched.description &&\n                        Boolean(props.errors.description)\n                     }\n                     helperText={\n                        props.touched.description && props.errors.description\n                     }\n                  />\n\n                  <SubtasksFieldArr\n                     subtasks={props.values.subtasks}\n                     value={props.values.subtasks}\n                     onChange={props.handleChange}\n                     tochedSubtasks={props.touched.subtasks}\n                     errorsSubtasks={props.errors.subtasks}\n                  />\n\n                  <SelectField\n                     value={props.values.status}\n                     onChange={props.handleChange}\n                     cols={cols}\n                  />\n\n                  <AppBtn\n                     type='submit'\n                     buttonSize='small'\n                     color='primary'\n                     sx={btnSx}\n                  >\n                     {isExisting ? 'Save Changes' : 'Create Task'}\n                  </AppBtn>\n               </Form>\n            )}\n         </EditorFormik>\n      </>\n      // </Paper>\n      // </Overlay>\n   );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}