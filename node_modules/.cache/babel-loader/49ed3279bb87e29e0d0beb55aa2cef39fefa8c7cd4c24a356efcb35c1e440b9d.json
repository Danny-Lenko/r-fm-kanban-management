{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/ManageTaskModal/ManageTaskModal.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { Typography } from '@mui/material';\nimport { DotsMenu } from '../..';\nimport { useFormikValues, ManagerCheckbox, ManagerSelect } from '.';\nimport { useAppSelector, useAppDispatch } from '../../../hooks';\nimport { setSubmissionTrigger, setTaskManaging } from '../../../../../main/slices';\nimport { CssHeading } from './CssComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ManageTaskModal = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    submissionTrigger\n  } = useAppSelector(state => state.modals);\n  const {\n    formik,\n    columns,\n    managedTask\n  } = useFormikValues();\n  const selectOptions = columns.map(col => col.name);\n\n  // const formRef = useRef<FormikProps<FormikValues>>(null);\n\n  useEffect(() => {\n    if (submissionTrigger) {\n      // formRef.current?.handleSubmit();\n      formik.handleSubmit();\n      dispatch(setSubmissionTrigger(false));\n      dispatch(setTaskManaging(false));\n    }\n  }, [submissionTrigger]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssHeading, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: managedTask.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DotsMenu, {\n        isTaskMenu: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: managedTask.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: formik.values,\n      onSubmit: () => formik.handleSubmit()\n      // innerRef={formRef}\n      ,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(ManagerCheckbox, {\n          formik: formik,\n          managedTask: managedTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ManagerSelect, {\n          formik: formik,\n          options: selectOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(ManageTaskModal, \"mgD0tSa+y3OVD+HxWLM+Ju7nnMk=\", false, function () {\n  return [useAppDispatch, useAppSelector, useFormikValues];\n});\n_c = ManageTaskModal;\nvar _c;\n$RefreshReg$(_c, \"ManageTaskModal\");","map":{"version":3,"names":["useEffect","Formik","Form","Typography","DotsMenu","useFormikValues","ManagerCheckbox","ManagerSelect","useAppSelector","useAppDispatch","setSubmissionTrigger","setTaskManaging","CssHeading","ManageTaskModal","dispatch","submissionTrigger","state","modals","formik","columns","managedTask","selectOptions","map","col","name","handleSubmit","title","description","values"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/ManageTaskModal/ManageTaskModal.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { Typography } from '@mui/material';\n\nimport { DotsMenu } from '../..';\nimport { useFormikValues, ManagerCheckbox, ManagerSelect } from '.';\nimport { useAppSelector, useAppDispatch } from '../../../hooks';\nimport {\n   setSubmissionTrigger,\n   setTaskManaging,\n} from '../../../../../main/slices';\n\nimport { CssHeading } from './CssComponents';\n\nexport const ManageTaskModal = () => {\n   const dispatch = useAppDispatch();\n   const { submissionTrigger } = useAppSelector((state) => state.modals);\n   const { formik, columns, managedTask } = useFormikValues();\n\n   const selectOptions = columns.map((col) => col.name);\n\n   // const formRef = useRef<FormikProps<FormikValues>>(null);\n\n   useEffect(() => {\n      if (submissionTrigger) {\n         // formRef.current?.handleSubmit();\n         formik.handleSubmit();\n\n         dispatch(setSubmissionTrigger(false));\n         dispatch(setTaskManaging(false));\n      }\n   }, [submissionTrigger]);\n\n   return (\n      <>\n         <CssHeading>\n            <Typography variant='h3'>{managedTask.title}</Typography>\n            <DotsMenu isTaskMenu={true} />\n         </CssHeading>\n         <Typography variant='body1'>{managedTask.description}</Typography>\n\n         <Formik\n            initialValues={formik.values}\n            onSubmit={() => formik.handleSubmit()}\n            // innerRef={formRef}\n         >\n            {\n               <Form>\n                  <ManagerCheckbox \n                  formik={formik} managedTask={managedTask} />\n                  <ManagerSelect formik={formik} options={selectOptions} />\n               </Form>\n            }\n         </Formik>\n      </>\n   );\n};\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,UAAU,QAAQ,eAAe;AAE1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,EAAEC,eAAe,EAAEC,aAAa,QAAQ,GAAG;AACnE,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SACGC,oBAAoB,EACpBC,eAAe,QACX,4BAA4B;AAEnC,SAASC,UAAU,QAAQ,iBAAiB;AAAC;AAAA;AAE7C,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;EAClC,MAAMC,QAAQ,GAAGL,cAAc,EAAE;EACjC,MAAM;IAAEM;EAAkB,CAAC,GAAGP,cAAc,CAAEQ,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EACrE,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGf,eAAe,EAAE;EAE1D,MAAMgB,aAAa,GAAGF,OAAO,CAACG,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;;EAEpD;;EAEAxB,SAAS,CAAC,MAAM;IACb,IAAIe,iBAAiB,EAAE;MACpB;MACAG,MAAM,CAACO,YAAY,EAAE;MAErBX,QAAQ,CAACJ,oBAAoB,CAAC,KAAK,CAAC,CAAC;MACrCI,QAAQ,CAACH,eAAe,CAAC,KAAK,CAAC,CAAC;IACnC;EACH,CAAC,EAAE,CAACI,iBAAiB,CAAC,CAAC;EAEvB,oBACG;IAAA,wBACG,QAAC,UAAU;MAAA,wBACR,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAA,UAAEK,WAAW,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA,QAAc,eACzD,QAAC,QAAQ;QAAC,UAAU,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,eACb,QAAC,UAAU;MAAC,OAAO,EAAC,OAAO;MAAA,UAAEN,WAAW,CAACO;IAAW;MAAA;MAAA;MAAA;IAAA,QAAc,eAElE,QAAC,MAAM;MACJ,aAAa,EAAET,MAAM,CAACU,MAAO;MAC7B,QAAQ,EAAE,MAAMV,MAAM,CAACO,YAAY;MACnC;MAAA;MAAA,uBAGG,QAAC,IAAI;QAAA,wBACF,QAAC,eAAe;UAChB,MAAM,EAAEP,MAAO;UAAC,WAAW,EAAEE;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5C,QAAC,aAAa;UAAC,MAAM,EAAEF,MAAO;UAAC,OAAO,EAAEG;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACrD;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA,gBACT;AAET,CAAC;AAAC,GA1CWR,eAAe;EAAA,QACRJ,cAAc,EACDD,cAAc,EACHH,eAAe;AAAA;AAAA,KAH9CQ,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}