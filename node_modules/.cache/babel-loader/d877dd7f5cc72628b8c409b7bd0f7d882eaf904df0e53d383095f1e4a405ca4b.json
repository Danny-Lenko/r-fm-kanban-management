{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx\",\n  _s = $RefreshSig$();\nimport { Form } from 'formik';\nimport { Typography } from '@mui/material';\nimport { EditorTitle, EditorDescription, EditorSelect, EditorSubtasks, EditorFormik } from '.';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditAddTaskModal = () => {\n  _s();\n  const cols = useAppSelector(state => state.data.activeBoard.columns);\n  const isExisting = useAppSelector(state => state.modals.isExistingTask);\n  const selectOptions = cols.map(col => col.name);\n  const btnProps = {\n    type: 'submit',\n    buttonSize: 'small'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: isExisting ? 'Edit task' : 'Add new task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(EditorFormik, {\n      children: props => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(EditorTitle, {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(EditorDescription, {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(EditorSubtasks, {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(EditorSelect, {\n            options: selectOptions,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n            type: \"submit\",\n            buttonSize: \"small\",\n            color: \"primary\",\n            children: isExisting ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(EditAddTaskModal, \"GBnZr9ay7rLkAzIYWZCbNtG6BaY=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n_c = EditAddTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditAddTaskModal\");","map":{"version":3,"names":["Form","Typography","EditorTitle","EditorDescription","EditorSelect","EditorSubtasks","EditorFormik","AppBtn","useAppSelector","EditAddTaskModal","cols","state","data","activeBoard","columns","isExisting","modals","isExistingTask","selectOptions","map","col","name","btnProps","type","buttonSize","props"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx"],"sourcesContent":["import { Form } from 'formik';\nimport { Typography } from '@mui/material';\n\nimport {\n   EditorTitle,\n   EditorDescription,\n   EditorSelect,\n   EditorSubtasks,\n   EditorFormik,\n} from '.';\nimport { AppBtn } from '../..';\n\nimport { useAppSelector } from '../../../hooks';\nimport { editorStyles } from './editorStyles';\n\nexport const EditAddTaskModal = () => {\n   const cols = useAppSelector((state) => state.data.activeBoard.columns);\n   const isExisting = useAppSelector((state) => state.modals.isExistingTask);\n\n   const selectOptions = cols.map((col) => col.name);\n\n   const btnProps = {\n      type: 'submit',\n      buttonSize: 'small'\n   }\n\n   return (\n      <>\n         <Typography variant='h3'>\n            {isExisting ? 'Edit task' : 'Add new task'}\n         </Typography>\n\n         <EditorFormik>\n            {(props) => {\n               return (\n                  <Form>\n                     <EditorTitle {...props} />\n                     <EditorDescription {...props} />\n                     <EditorSubtasks {...props} />\n                     <EditorSelect options={selectOptions} {...props} />\n                     <AppBtn type='submit' buttonSize='small' color='primary'>\n                        {isExisting ? 'Save Changes' : 'Create Task'}\n                     </AppBtn>\n                  </Form>\n               );\n            }}\n         </EditorFormik>\n      </>\n   );\n};\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,UAAU,QAAQ,eAAe;AAE1C,SACGC,WAAW,EACXC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,YAAY,QACR,GAAG;AACV,SAASC,MAAM,QAAQ,OAAO;AAE9B,SAASC,cAAc,QAAQ,gBAAgB;AAAC;AAAA;AAGhD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EACnC,MAAMC,IAAI,GAAGF,cAAc,CAAEG,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC;EACtE,MAAMC,UAAU,GAAGP,cAAc,CAAEG,KAAK,IAAKA,KAAK,CAACK,MAAM,CAACC,cAAc,CAAC;EAEzE,MAAMC,aAAa,GAAGR,IAAI,CAACS,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;EAEjD,MAAMC,QAAQ,GAAG;IACdC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE;EACf,CAAC;EAED,oBACG;IAAA,wBACG,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAA,UACpBT,UAAU,GAAG,WAAW,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QAChC,eAEb,QAAC,YAAY;MAAA,UACRU,KAAK,IAAK;QACT,oBACG,QAAC,IAAI;UAAA,wBACF,QAAC,WAAW;YAAA,GAAKA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAI,eAC1B,QAAC,iBAAiB;YAAA,GAAKA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAI,eAChC,QAAC,cAAc;YAAA,GAAKA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAI,eAC7B,QAAC,YAAY;YAAC,OAAO,EAAEP,aAAc;YAAA,GAAKO;UAAK;YAAA;YAAA;YAAA;UAAA,QAAI,eACnD,QAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAC,UAAU,EAAC,OAAO;YAAC,KAAK,EAAC,SAAS;YAAA,UACpDV,UAAU,GAAG,cAAc,GAAG;UAAa;YAAA;YAAA;YAAA;UAAA,QACtC;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QACW;EAAA,gBACf;AAET,CAAC;AAAC,GAlCWN,gBAAgB;EAAA,QACbD,cAAc,EACRA,cAAc;AAAA;AAAA,KAFvBC,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}