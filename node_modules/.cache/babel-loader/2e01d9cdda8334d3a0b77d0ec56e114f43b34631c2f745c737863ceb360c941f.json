{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/modules/Board/Board.tsx\",\n  _s = $RefreshSig$();\nimport { Typography, Stack } from '@mui/material';\nimport { CssBoard, CssScrollable, CssInteractiveScreen, CssColumn, CssColorLabel, CssColumnButton, TaskCard, useNewColumn } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const {\n    columns,\n    addNewColumn\n  } = useNewColumn();\n  return /*#__PURE__*/_jsxDEV(CssBoard, {\n    children: [/*#__PURE__*/_jsxDEV(CssScrollable, {\n      children: /*#__PURE__*/_jsxDEV(CssInteractiveScreen, {\n        children: columns.map(col => {\n          const {\n            name,\n            color,\n            tasks\n          } = col;\n          return /*#__PURE__*/_jsxDEV(CssColumn, {\n            spacing: 2.5,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(CssColorLabel, {\n                color: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'h5',\n                textTransform: 'uppercase',\n                children: [name, \" (\", tasks.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n              ...task\n            }, task.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 28\n            }, this))]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CssColumnButton, {\n      onClick: addNewColumn,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"+ New Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_s(Board, \"9vU9nf0sP4iHThLEx5H2zdB6BJM=\", false, function () {\n  return [useNewColumn];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Typography","Stack","CssBoard","CssScrollable","CssInteractiveScreen","CssColumn","CssColorLabel","CssColumnButton","TaskCard","useNewColumn","Board","columns","addNewColumn","map","col","name","color","tasks","variant","textTransform","length","task","title"],"sources":["/home/danny/projects/r-fm-kanban-management/src/modules/Board/Board.tsx"],"sourcesContent":["import { Typography, Stack } from '@mui/material';\n\nimport {\n   CssBoard,\n   CssScrollable,\n   CssInteractiveScreen,\n   CssColumn,\n   CssColorLabel,\n   CssColumnButton,\n   TaskCard,\n   useNewColumn,\n} from '.';\n\nexport const Board = () => {\n   const { columns, addNewColumn } = useNewColumn();\n\n   return (\n      <CssBoard>\n         <CssScrollable>\n            <CssInteractiveScreen>\n               {columns.map((col) => {\n                  const { name, color, tasks } = col;\n\n                  return (\n                     <CssColumn key={name} spacing={2.5}>\n                        <Stack direction='row' spacing={1}>\n                           <CssColorLabel color={color} />\n                           <Typography\n                              {...{ variant: 'h5', textTransform: 'uppercase' }}\n                           >\n                              {name} ({tasks.length})\n                           </Typography>\n                        </Stack>\n                        {tasks.map((task) => (\n                           <TaskCard key={task.title} {...task} />\n                        ))}\n                     </CssColumn>\n                  );\n               })}\n            </CssInteractiveScreen>\n         </CssScrollable>\n\n         <CssColumnButton onClick={addNewColumn}>\n            <Typography variant='h2'>+ New Column</Typography>\n         </CssColumnButton>\n      </CssBoard>\n   );\n};\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAEjD,SACGC,QAAQ,EACRC,aAAa,EACbC,oBAAoB,EACpBC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,QAAQ,EACRC,YAAY,QACR,GAAG;AAAC;AAEX,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGH,YAAY,EAAE;EAEhD,oBACG,QAAC,QAAQ;IAAA,wBACN,QAAC,aAAa;MAAA,uBACX,QAAC,oBAAoB;QAAA,UACjBE,OAAO,CAACE,GAAG,CAAEC,GAAG,IAAK;UACnB,MAAM;YAAEC,IAAI;YAAEC,KAAK;YAAEC;UAAM,CAAC,GAAGH,GAAG;UAElC,oBACG,QAAC,SAAS;YAAY,OAAO,EAAE,GAAI;YAAA,wBAChC,QAAC,KAAK;cAAC,SAAS,EAAC,KAAK;cAAC,OAAO,EAAE,CAAE;cAAA,wBAC/B,QAAC,aAAa;gBAAC,KAAK,EAAEE;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAC/B,QAAC,UAAU;gBACFE,OAAO,EAAE,IAAI;gBAAEC,aAAa,EAAE,WAAW;gBAAA,WAE9CJ,IAAI,QAAIE,KAAK,CAACG,MAAM;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACX;YAAA;cAAA;cAAA;cAAA;YAAA,QACR,EACPH,KAAK,CAACJ,GAAG,CAAEQ,IAAI,iBACb,QAAC,QAAQ;cAAA,GAAsBA;YAAI,GAApBA,IAAI,CAACC,KAAK;cAAA;cAAA;cAAA;YAAA,QAC3B,CAAC;UAAA,GAXWP,IAAI;YAAA;YAAA;YAAA;UAAA,QAYR;QAElB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACkB;MAAA;MAAA;MAAA;IAAA,QACV,eAEhB,QAAC,eAAe;MAAC,OAAO,EAAEH,YAAa;MAAA,uBACpC,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA0B;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEjB,CAAC;AAAC,GAlCWF,KAAK;EAAA,QACmBD,YAAY;AAAA;AAAA,KADpCC,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}