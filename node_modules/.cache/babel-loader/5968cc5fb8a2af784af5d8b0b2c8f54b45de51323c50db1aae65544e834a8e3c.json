{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx\",\n  _s = $RefreshSig$();\nimport { Typography } from '@mui/material';\nimport { Form } from 'formik';\nimport { btnSx } from './editorStyles';\nimport { EditorTitleField, EditorDescriptionField, EditorSelectField, EditorSubtasksFieldArr, EditorFormik } from '.';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EditAddTaskModal = () => {\n  _s();\n  const cols = useAppSelector(state => state.data.activeBoard.columns);\n  const isExisting = useAppSelector(state => state.modals.isExistingTask);\n  return (\n    /*#__PURE__*/\n    // <Overlay>\n    // <Paper elevation={0} sx={editorStyles(theme)}>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: isExisting ? 'Edit task' : 'Add new task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(EditorFormik, {\n        children: props => {\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(EditorTitleField, {\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorDescriptionField, {\n              value: props.values.description,\n              onChange: props.handleChange,\n              error: props.touched.description && Boolean(props.errors.description),\n              helperText: props.touched.description && props.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorSubtasksFieldArr, {\n              subtasks: props.values.subtasks,\n              value: props.values.subtasks,\n              onChange: props.handleChange,\n              tochedSubtasks: props.touched.subtasks,\n              errorsSubtasks: props.errors.subtasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(EditorSelectField, {\n              value: props.values.status,\n              onChange: props.handleChange,\n              cols: cols\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(AppBtn, {\n              type: \"submit\",\n              buttonSize: \"small\",\n              color: \"primary\",\n              sx: btnSx,\n              children: isExisting ? 'Save Changes' : 'Create Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)\n    // </Paper>\n    // </Overlay>\n  );\n};\n_s(EditAddTaskModal, \"GBnZr9ay7rLkAzIYWZCbNtG6BaY=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n_c = EditAddTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditAddTaskModal\");","map":{"version":3,"names":["Typography","Form","btnSx","EditorTitleField","EditorDescriptionField","EditorSelectField","EditorSubtasksFieldArr","EditorFormik","AppBtn","useAppSelector","EditAddTaskModal","cols","state","data","activeBoard","columns","isExisting","modals","isExistingTask","props","values","description","handleChange","touched","Boolean","errors","subtasks","status"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditAddTaskModal.tsx"],"sourcesContent":["import { Paper, Typography } from '@mui/material';\n\nimport { Form, FormikProps, FormikValues } from 'formik';\n\nimport { editorStyles, btnSx } from './editorStyles';\n\nimport {\n   EditorTitleField,\n   EditorDescriptionField,\n   EditorSelectField,\n   EditorSubtasksFieldArr,\n   EditorFormik,\n} from '.';\nimport { AppBtn } from '../..';\nimport { useAppSelector } from '../../../hooks';\n\nexport const EditAddTaskModal = () => {\n   const cols = useAppSelector((state) => state.data.activeBoard.columns);\n   const isExisting = useAppSelector((state) => state.modals.isExistingTask);\n\n   return (\n      // <Overlay>\n      // <Paper elevation={0} sx={editorStyles(theme)}>\n\n      <>\n         <Typography variant='h3'>\n            {isExisting ? 'Edit task' : 'Add new task'}\n         </Typography>\n\n         <EditorFormik>\n            {(props) => {\n               return (\n                  <Form>\n                     <EditorTitleField\n                        {...props}\n                     />\n\n                     <EditorDescriptionField\n                        value={props.values.description}\n                        onChange={props.handleChange}\n                        error={\n                           props.touched.description &&\n                           Boolean(props.errors.description)\n                        }\n                        helperText={\n                           props.touched.description && props.errors.description\n                        }\n                     />\n\n                     <EditorSubtasksFieldArr\n                        subtasks={props.values.subtasks}\n                        value={props.values.subtasks}\n                        onChange={props.handleChange}\n                        tochedSubtasks={props.touched.subtasks}\n                        errorsSubtasks={props.errors.subtasks}\n                     />\n\n                     <EditorSelectField\n                        value={props.values.status}\n                        onChange={props.handleChange}\n                        cols={cols}\n                     />\n\n                     <AppBtn\n                        type='submit'\n                        buttonSize='small'\n                        color='primary'\n                        sx={btnSx}\n                     >\n                        {isExisting ? 'Save Changes' : 'Create Task'}\n                     </AppBtn>\n                  </Form>\n               );\n            }}\n         </EditorFormik>\n      </>\n      // </Paper>\n      // </Overlay>\n   );\n};\n"],"mappings":";;AAAA,SAAgBA,UAAU,QAAQ,eAAe;AAEjD,SAASC,IAAI,QAAmC,QAAQ;AAExD,SAAuBC,KAAK,QAAQ,gBAAgB;AAEpD,SACGC,gBAAgB,EAChBC,sBAAsB,EACtBC,iBAAiB,EACjBC,sBAAsB,EACtBC,YAAY,QACR,GAAG;AACV,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,cAAc,QAAQ,gBAAgB;AAAC;AAAA;AAEhD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EACnC,MAAMC,IAAI,GAAGF,cAAc,CAAEG,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC;EACtE,MAAMC,UAAU,GAAGP,cAAc,CAAEG,KAAK,IAAKA,KAAK,CAACK,MAAM,CAACC,cAAc,CAAC;EAEzE;IAAA;IACG;IACA;IAEA;MAAA,wBACG,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAA,UACpBF,UAAU,GAAG,WAAW,GAAG;MAAc;QAAA;QAAA;QAAA;MAAA,QAChC,eAEb,QAAC,YAAY;QAAA,UACRG,KAAK,IAAK;UACT,oBACG,QAAC,IAAI;YAAA,wBACF,QAAC,gBAAgB;cAAA,GACVA;YAAK;cAAA;cAAA;cAAA;YAAA,QACV,eAEF,QAAC,sBAAsB;cACpB,KAAK,EAAEA,KAAK,CAACC,MAAM,CAACC,WAAY;cAChC,QAAQ,EAAEF,KAAK,CAACG,YAAa;cAC7B,KAAK,EACFH,KAAK,CAACI,OAAO,CAACF,WAAW,IACzBG,OAAO,CAACL,KAAK,CAACM,MAAM,CAACJ,WAAW,CAClC;cACD,UAAU,EACPF,KAAK,CAACI,OAAO,CAACF,WAAW,IAAIF,KAAK,CAACM,MAAM,CAACJ;YAC5C;cAAA;cAAA;cAAA;YAAA,QACF,eAEF,QAAC,sBAAsB;cACpB,QAAQ,EAAEF,KAAK,CAACC,MAAM,CAACM,QAAS;cAChC,KAAK,EAAEP,KAAK,CAACC,MAAM,CAACM,QAAS;cAC7B,QAAQ,EAAEP,KAAK,CAACG,YAAa;cAC7B,cAAc,EAAEH,KAAK,CAACI,OAAO,CAACG,QAAS;cACvC,cAAc,EAAEP,KAAK,CAACM,MAAM,CAACC;YAAS;cAAA;cAAA;cAAA;YAAA,QACvC,eAEF,QAAC,iBAAiB;cACf,KAAK,EAAEP,KAAK,CAACC,MAAM,CAACO,MAAO;cAC3B,QAAQ,EAAER,KAAK,CAACG,YAAa;cAC7B,IAAI,EAAEX;YAAK;cAAA;cAAA;cAAA;YAAA,QACZ,eAEF,QAAC,MAAM;cACJ,IAAI,EAAC,QAAQ;cACb,UAAU,EAAC,OAAO;cAClB,KAAK,EAAC,SAAS;cACf,EAAE,EAAET,KAAM;cAAA,UAETc,UAAU,GAAG,cAAc,GAAG;YAAa;cAAA;cAAA;cAAA;YAAA,QACtC;UAAA;YAAA;YAAA;YAAA;UAAA,QACL;QAEb;MAAC;QAAA;QAAA;QAAA;MAAA,QACW;IAAA;IAElB;IACA;EAAA;AAEN,CAAC;AAAC,GA/DWN,gBAAgB;EAAA,QACbD,cAAc,EACRA,cAAc;AAAA;AAAA,KAFvBC,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}