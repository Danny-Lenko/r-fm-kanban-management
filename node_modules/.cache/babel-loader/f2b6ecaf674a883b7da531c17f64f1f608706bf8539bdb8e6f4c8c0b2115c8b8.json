{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAppSelector, useAppDispatch } from '../../../../hooks';\nimport { createTask, saveChanges } from '.';\nexport const useFormikValues = () => {\n  _s();\n  const {\n    boards,\n    activeBoard,\n    activeBoardId,\n    activeColId,\n    managedTask: activeTask\n  } = useAppSelector(state => state.data);\n  const {\n    columns\n  } = activeBoard;\n  const isExisting = useAppSelector(state => state.modals.isExistingTask);\n  const dispatch = useAppDispatch();\n  const submissionParams = {\n    columns,\n    boards,\n    activeBoard,\n    activeBoardId,\n    dispatch,\n    activeTask,\n    activeColId\n  };\n  const initialValues = isExisting ? {\n    title: activeTask.title,\n    description: activeTask.description,\n    subtasks: activeTask.subtasks.map(sub => sub.title),\n    status: activeTask.status\n  } : {\n    title: '',\n    description: '',\n    subtasks: ['', ''],\n    status: columns[0].name\n  };\n  const submit = values => isExisting ? saveChanges({\n    values,\n    ...submissionParams\n  }) : createTask({\n    values,\n    ...submissionParams\n  });\n  return {\n    initialValues,\n    submit\n  };\n};\n_s(useFormikValues, \"hzGQsEIMZ9kufFrL/pW52ExKqcE=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});","map":{"version":3,"names":["useAppSelector","useAppDispatch","createTask","saveChanges","useFormikValues","boards","activeBoard","activeBoardId","activeColId","managedTask","activeTask","state","data","columns","isExisting","modals","isExistingTask","dispatch","submissionParams","initialValues","title","description","subtasks","map","sub","status","name","submit","values"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditorFormik/useFormikValues.ts"],"sourcesContent":["import { useAppSelector, useAppDispatch } from '../../../../hooks';\n\nimport { Values, createTask, saveChanges } from '.';\n\nexport const useFormikValues = () => {\n   const {\n      boards,\n      activeBoard,\n      activeBoardId,\n      activeColId,\n      managedTask: activeTask,\n   } = useAppSelector((state) => state.data);\n   const { columns } = activeBoard;\n\n   const isExisting = useAppSelector((state) => state.modals.isExistingTask);\n   const dispatch = useAppDispatch();\n\n   const submissionParams = {\n      columns,\n      boards,\n      activeBoard,\n      activeBoardId,\n      dispatch,\n      activeTask,\n      activeColId,\n   };\n\n   const initialValues = isExisting\n      ? {\n           title: activeTask.title,\n           description: activeTask.description,\n           subtasks: activeTask.subtasks.map((sub) => sub.title),\n           status: activeTask.status,\n        }\n      : {\n           title: '',\n           description: '',\n           subtasks: ['', ''],\n           status: columns[0].name,\n        };\n\n   const submit = (values: Values) =>\n      isExisting\n         ? saveChanges({ values, ...submissionParams })\n         : createTask({ values, ...submissionParams });\n\n   return {\n      initialValues,\n      submit,\n   };\n};\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAElE,SAAiBC,UAAU,EAAEC,WAAW,QAAQ,GAAG;AAEnD,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;EAClC,MAAM;IACHC,MAAM;IACNC,WAAW;IACXC,aAAa;IACbC,WAAW;IACXC,WAAW,EAAEC;EAChB,CAAC,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACzC,MAAM;IAAEC;EAAQ,CAAC,GAAGP,WAAW;EAE/B,MAAMQ,UAAU,GAAGd,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACI,MAAM,CAACC,cAAc,CAAC;EACzE,MAAMC,QAAQ,GAAGhB,cAAc,EAAE;EAEjC,MAAMiB,gBAAgB,GAAG;IACtBL,OAAO;IACPR,MAAM;IACNC,WAAW;IACXC,aAAa;IACbU,QAAQ;IACRP,UAAU;IACVF;EACH,CAAC;EAED,MAAMW,aAAa,GAAGL,UAAU,GAC3B;IACGM,KAAK,EAAEV,UAAU,CAACU,KAAK;IACvBC,WAAW,EAAEX,UAAU,CAACW,WAAW;IACnCC,QAAQ,EAAEZ,UAAU,CAACY,QAAQ,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACJ,KAAK,CAAC;IACrDK,MAAM,EAAEf,UAAU,CAACe;EACtB,CAAC,GACD;IACGL,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBG,MAAM,EAAEZ,OAAO,CAAC,CAAC,CAAC,CAACa;EACtB,CAAC;EAEN,MAAMC,MAAM,GAAIC,MAAc,IAC3Bd,UAAU,GACLX,WAAW,CAAC;IAAEyB,MAAM;IAAE,GAAGV;EAAiB,CAAC,CAAC,GAC5ChB,UAAU,CAAC;IAAE0B,MAAM;IAAE,GAAGV;EAAiB,CAAC,CAAC;EAEnD,OAAO;IACJC,aAAa;IACbQ;EACH,CAAC;AACJ,CAAC;AAAC,GA9CWvB,eAAe;EAAA,QAOrBJ,cAAc,EAGCA,cAAc,EAChBC,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}