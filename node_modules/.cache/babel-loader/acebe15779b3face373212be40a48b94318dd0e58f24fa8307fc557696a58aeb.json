{"ast":null,"code":"var _jsxFileName = \"/home/danny/projects/r-fm-kanban-management/src/modules/Layout/AppBar/index.tsx\",\n  _s = $RefreshSig$();\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useAppDispatch, useAppSelector } from '../../../library/common/hooks';\nimport Box from '@mui/material/Box/Box';\nimport logoDark from '../../../resources/assets/logo-dark.svg';\nimport logoLight from '../../../resources/assets/logo-light.svg';\nimport logoMobile from '../../../resources/assets/logo-mobile.svg';\nimport { AppBarEl, appbarStyles } from './appbarStyles';\nimport { setXsBoardsOpen } from '../../../main/slices/modalSlice';\nimport useMediaQuery from '@mui/material/useMediaQuery/useMediaQuery';\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\nimport ExpandLessRoundedIcon from '@mui/icons-material/ExpandLessRounded';\nimport XsBoardsModal from './XsBoardsModal';\nimport ButtonsBox from './ButtonsBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppBar = () => {\n  _s();\n  const {\n    drawer,\n    modals,\n    data\n  } = useAppSelector(state => state);\n  const {\n    open\n  } = drawer;\n  const {\n    xsBoardsOpen\n  } = modals;\n  const {\n    activeBoard\n  } = data;\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const {\n    breakpoints\n  } = theme;\n  const xsScreen = useMediaQuery(breakpoints.down('sm'));\n  return /*#__PURE__*/_jsxDEV(AppBarEl, {\n    sx: () => appbarStyles(open, theme),\n    color: \"inherit\",\n    elevation: 0,\n    position: \"fixed\",\n    open: open,\n    children: [xsScreen && /*#__PURE__*/_jsxDEV(XsBoardsModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"logo-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          sx: {\n            width: {\n              xs: '24px',\n              sm: '153px'\n            }\n          },\n          src: xsScreen ? logoMobile : theme.palette.mode === 'light' ? logoDark : logoLight,\n          alt: \"kanban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        noWrap: true,\n        component: \"div\",\n        onClick: () => {\n          return xsScreen && xsBoardsOpen ? dispatch(setXsBoardsOpen(false)) : xsScreen ? dispatch(setXsBoardsOpen(true)) : null;\n        },\n        children: activeBoard.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), xsScreen && xsBoardsOpen ? /*#__PURE__*/_jsxDEV(ExpandLessRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this) : xsScreen ? /*#__PURE__*/_jsxDEV(ExpandMoreRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this) : null, /*#__PURE__*/_jsxDEV(ButtonsBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(AppBar, \"YzVR6dQglv9W7+PAHCAK3ZXRi8s=\", false, function () {\n  return [useAppSelector, useAppDispatch, useTheme, useMediaQuery];\n});\n_c = AppBar;\nvar _c;\n$RefreshReg$(_c, \"AppBar\");","map":{"version":3,"names":["Toolbar","Typography","useTheme","useAppDispatch","useAppSelector","Box","logoDark","logoLight","logoMobile","AppBarEl","appbarStyles","setXsBoardsOpen","useMediaQuery","ExpandMoreRoundedIcon","ExpandLessRoundedIcon","XsBoardsModal","ButtonsBox","AppBar","drawer","modals","data","state","open","xsBoardsOpen","activeBoard","dispatch","theme","breakpoints","xsScreen","down","width","xs","sm","palette","mode","name"],"sources":["/home/danny/projects/r-fm-kanban-management/src/modules/Layout/AppBar/index.tsx"],"sourcesContent":["import Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useAppDispatch, useAppSelector } from '../../../library/common/hooks';\nimport Box from '@mui/material/Box/Box';\nimport logoDark from '../../../resources/assets/logo-dark.svg';\nimport logoLight from '../../../resources/assets/logo-light.svg';\nimport logoMobile from '../../../resources/assets/logo-mobile.svg';\n\nimport { AppBarEl, appbarStyles } from './appbarStyles';\nimport { setXsBoardsOpen } from '../../../main/slices/modalSlice';\nimport useMediaQuery from '@mui/material/useMediaQuery/useMediaQuery';\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\nimport ExpandLessRoundedIcon from '@mui/icons-material/ExpandLessRounded';\nimport XsBoardsModal from './XsBoardsModal';\nimport ButtonsBox from './ButtonsBox';\n\nexport const AppBar = () => {\n   const { drawer, modals, data } = useAppSelector((state) => state);\n   const { open } = drawer;\n   const { xsBoardsOpen } = modals;\n   const { activeBoard } = data;\n\n   const dispatch = useAppDispatch();\n\n   const theme = useTheme();\n   const { breakpoints } = theme;\n   const xsScreen = useMediaQuery(breakpoints.down('sm'));\n\n   return (\n      <AppBarEl\n         sx={() => appbarStyles(open, theme)}\n         color='inherit'\n         elevation={0}\n         position='fixed'\n         open={open}\n      >\n         {xsScreen && <XsBoardsModal />}\n         <Toolbar>\n            <Box className='logo-wrapper'>\n               <Box\n                  component='img'\n                  sx={{ width: { xs: '24px', sm: '153px' } }}\n                  src={\n                     xsScreen\n                        ? logoMobile\n                        : theme.palette.mode === 'light'\n                        ? logoDark\n                        : logoLight\n                  }\n                  alt='kanban'\n               ></Box>\n            </Box>\n            <Typography\n               variant='h2'\n               noWrap\n               component='div'\n               onClick={() => {\n                  return xsScreen && xsBoardsOpen\n                     ? dispatch(setXsBoardsOpen(false))\n                     : xsScreen\n                     ? dispatch(setXsBoardsOpen(true))\n                     : null;\n               }}\n            >\n               {activeBoard.name}\n            </Typography>\n            {xsScreen && xsBoardsOpen ? (\n               <ExpandLessRoundedIcon />\n            ) : xsScreen ? (\n               <ExpandMoreRoundedIcon />\n            ) : null}\n            <ButtonsBox />\n         </Toolbar>\n      </AppBarEl>\n   );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}