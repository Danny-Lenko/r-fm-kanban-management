{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useField } from 'formik';\nconst placeholders = ['e.g. Make coffee', 'e.g. Drink coffee and smile', 'e.g. Make coffee to friends', 'e.g. Invite friends for coffee', 'e.g. Drink coffee with friends'];\nexport const useSubtaskProps = _ref => {\n  _s();\n  let {\n    index,\n    arrayHelpers\n  } = _ref;\n  const [field, meta] = useField(`subtasks.${index}`);\n  const isTouched = meta.touched;\n  const error = isTouched && meta.error;\n  const placeholder = placeholders[index] || `e.g. Seems like no time for coffee anymore`;\n  const removeSubtask = (arr, index) => {\n    arr.remove(index);\n  };\n  const stackProps = {\n    direction: 'row',\n    gap: 2\n  };\n  const fieldProps = {\n    size: 'small',\n    fullWidth: true,\n    placeholder,\n    error: !!error,\n    helperText: isTouched && error ? error : ''\n  };\n  const xButtonProps = {\n    sx: {\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    onClick: () => removeSubtask(arrayHelpers, index)\n  };\n  return {\n    field,\n    stackProps,\n    fieldProps,\n    xButtonProps\n  };\n};\n_s(useSubtaskProps, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});","map":{"version":3,"names":["useField","placeholders","useSubtaskProps","index","arrayHelpers","field","meta","isTouched","touched","error","placeholder","removeSubtask","arr","remove","stackProps","direction","gap","fieldProps","size","fullWidth","helperText","xButtonProps","sx","backgroundColor","onClick"],"sources":["/home/danny/projects/r-fm-kanban-management/src/library/common/components/AppModal/EditAddTaskModal/EditorSubtasks/Subtask/useSubtaskProps.ts"],"sourcesContent":["import { FieldArrayRenderProps, useField } from 'formik';\n\ninterface Props {\n   index: number;\n   arrayHelpers: FieldArrayRenderProps;\n}\n\nconst placeholders = [\n   'e.g. Make coffee',\n   'e.g. Drink coffee and smile',\n   'e.g. Make coffee to friends',\n   'e.g. Invite friends for coffee',\n   'e.g. Drink coffee with friends',\n];\n\nexport const useSubtaskProps = ({ index, arrayHelpers }: Props) => {\n   const [field, meta] = useField(`subtasks.${index}`);\n\n   const isTouched = meta.touched;\n   const error = isTouched && meta.error;\n\n   const placeholder =\n      placeholders[index] || `e.g. Seems like no time for coffee anymore`;\n\n   const removeSubtask = (arr: FieldArrayRenderProps, index: number) => {\n      arr.remove(index);\n   };\n\n   const stackProps = {\n      direction: 'row' as 'row',\n      gap: 2,\n   };\n\n   const fieldProps = {\n      size: 'small' as 'small',\n      fullWidth: true,\n      placeholder,\n      error: !!error,\n      helperText: isTouched && error ? error : '',\n   };\n\n   const xButtonProps = {\n      sx: { '&:hover': { backgroundColor: 'transparent' } },\n      onClick: () => removeSubtask(arrayHelpers, index),\n   };\n\n   return { field, stackProps, fieldProps, xButtonProps };\n};\n"],"mappings":";AAAA,SAAgCA,QAAQ,QAAQ,QAAQ;AAOxD,MAAMC,YAAY,GAAG,CAClB,kBAAkB,EAClB,6BAA6B,EAC7B,6BAA6B,EAC7B,gCAAgC,EAChC,gCAAgC,CAClC;AAED,OAAO,MAAMC,eAAe,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEC,KAAK;IAAEC;EAAoB,CAAC;EAC3D,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAE,YAAWG,KAAM,EAAC,CAAC;EAEnD,MAAMI,SAAS,GAAGD,IAAI,CAACE,OAAO;EAC9B,MAAMC,KAAK,GAAGF,SAAS,IAAID,IAAI,CAACG,KAAK;EAErC,MAAMC,WAAW,GACdT,YAAY,CAACE,KAAK,CAAC,IAAK,4CAA2C;EAEtE,MAAMQ,aAAa,GAAG,CAACC,GAA0B,EAAET,KAAa,KAAK;IAClES,GAAG,CAACC,MAAM,CAACV,KAAK,CAAC;EACpB,CAAC;EAED,MAAMW,UAAU,GAAG;IAChBC,SAAS,EAAE,KAAc;IACzBC,GAAG,EAAE;EACR,CAAC;EAED,MAAMC,UAAU,GAAG;IAChBC,IAAI,EAAE,OAAkB;IACxBC,SAAS,EAAE,IAAI;IACfT,WAAW;IACXD,KAAK,EAAE,CAAC,CAACA,KAAK;IACdW,UAAU,EAAEb,SAAS,IAAIE,KAAK,GAAGA,KAAK,GAAG;EAC5C,CAAC;EAED,MAAMY,YAAY,GAAG;IAClBC,EAAE,EAAE;MAAE,SAAS,EAAE;QAAEC,eAAe,EAAE;MAAc;IAAE,CAAC;IACrDC,OAAO,EAAE,MAAMb,aAAa,CAACP,YAAY,EAAED,KAAK;EACnD,CAAC;EAED,OAAO;IAAEE,KAAK;IAAES,UAAU;IAAEG,UAAU;IAAEI;EAAa,CAAC;AACzD,CAAC;AAAC,GAhCWnB,eAAe;EAAA,QACHF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}